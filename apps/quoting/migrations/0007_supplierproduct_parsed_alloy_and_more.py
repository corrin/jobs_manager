# Generated by Django 5.2 on 2025-06-16 09:00

import uuid

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("quoting", "0006_alter_supplierproduct_unique_together_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="supplierproduct",
            name="parsed_alloy",
            field=models.CharField(
                blank=True,
                help_text="Alloy specification (e.g., 304, 6061)",
                max_length=50,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="supplierproduct",
            name="parsed_at",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="supplierproduct",
            name="parsed_description",
            field=models.CharField(
                blank=True,
                help_text="Standardized description for inventory",
                max_length=255,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="supplierproduct",
            name="parsed_dimensions",
            field=models.CharField(
                blank=True,
                help_text="Standardized dimensions format",
                max_length=100,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="supplierproduct",
            name="parsed_item_code",
            field=models.CharField(
                blank=True,
                help_text="Item code parsed for inventory mapping",
                max_length=100,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="supplierproduct",
            name="parsed_metal_type",
            field=models.CharField(
                blank=True,
                choices=[
                    ("stainless_steel", "Stainless Steel"),
                    ("mild_steel", "Mild Steel"),
                    ("aluminum", "Aluminum"),
                    ("brass", "Brass"),
                    ("copper", "Copper"),
                    ("titanium", "Titanium"),
                    ("zinc", "Zinc"),
                    ("galvanized", "Galvanized"),
                    ("unspecified", "Unspecified"),
                    ("other", "Other"),
                ],
                help_text="Metal type parsed from product specifications",
                max_length=50,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="supplierproduct",
            name="parsed_price_unit",
            field=models.CharField(
                blank=True,
                help_text="Standardized price unit (e.g., 'per metre', 'each')",
                max_length=50,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="supplierproduct",
            name="parsed_specifics",
            field=models.CharField(
                blank=True,
                help_text="Specific details parsed from product data",
                max_length=255,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="supplierproduct",
            name="parsed_unit_cost",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Standardized unit cost",
                max_digits=10,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="supplierproduct",
            name="parser_confidence",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Parser confidence score 0.00-1.00",
                max_digits=3,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="supplierproduct",
            name="parser_version",
            field=models.CharField(
                blank=True,
                help_text="Version of parser used for this data",
                max_length=50,
                null=True,
            ),
        ),
        migrations.CreateModel(
            name="ProductParsingMapping",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "input_hash",
                    models.CharField(
                        db_index=True,
                        help_text="SHA-256 hash of normalized input data",
                        max_length=64,
                        unique=True,
                    ),
                ),
                (
                    "input_data",
                    models.JSONField(
                        help_text="Original input data that was parsed"),
                ),
                (
                    "mapped_item_code",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "mapped_description",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "mapped_metal_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("stainless_steel", "Stainless Steel"),
                            ("mild_steel", "Mild Steel"),
                            ("aluminum", "Aluminum"),
                            ("brass", "Brass"),
                            ("copper", "Copper"),
                            ("titanium", "Titanium"),
                            ("zinc", "Zinc"),
                            ("galvanized", "Galvanized"),
                            ("unspecified", "Unspecified"),
                            ("other", "Other"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "mapped_alloy",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "mapped_specifics",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "mapped_dimensions",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "mapped_unit_cost",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "mapped_price_unit",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("parser_version", models.CharField(max_length=50)),
                (
                    "parser_confidence",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=3, null=True
                    ),
                ),
                (
                    "llm_response",
                    models.JSONField(
                        help_text="Full LLM response for debugging"),
                ),
                (
                    "is_validated",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this mapping has been manually validated",
                    ),
                ),
                (
                    "validated_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When this mapping was validated",
                        null=True,
                    ),
                ),
                (
                    "validation_notes",
                    models.TextField(
                        blank=True, help_text="Notes from manual validation", null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "validated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="Staff member who validated this mapping",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Product Parsing Mapping",
                "verbose_name_plural": "Product Parsing Mappings",
                "indexes": [
                    models.Index(
                        fields=["input_hash"], name="quoting_pro_input_h_ffd369_idx"
                    ),
                    models.Index(
                        fields=["created_at"], name="quoting_pro_created_09311f_idx"
                    ),
                ],
            },
        ),
    ]
