# Generated by Django 5.2 on 2025-06-04 23:58

import uuid
from decimal import Decimal

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


# !!!!!
# This migration is meant to be faked in existing dbs. Its only purpose is to create the tables when creating a fresh db.
class Migration(migrations.Migration):

    dependencies = [
        ("purchasing", "0004_stock"),
        ("workflow", "0109_stock"),
    ]

    database_operations = [
        migrations.CreateModel(
            name="Stock",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        help_text="Description of the stock item", max_length=255
                    ),
                ),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Current quantity of the stock item",
                        max_digits=10,
                    ),
                ),
                (
                    "unit_cost",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Cost per unit of the stock item",
                        max_digits=10,
                    ),
                ),
                (
                    "retail_rate",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.2"),
                        help_text="Retail markup rate for this stock item (e.g., 0.2 for 20%)",
                        max_digits=10,
                    ),
                ),
                (
                    "date",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="Date the stock item was created",
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        choices=[
                            ("purchase_order", "Purchase Order Receipt"),
                            ("split_from_stock", "Split/Offcut from Stock"),
                            ("manual", "Manual Adjustment/Stocktake"),
                        ],
                        help_text="Origin of this stock item",
                        max_length=50,
                    ),
                ),
                (
                    "location",
                    models.TextField(
                        blank=True, help_text="Where we are keeping this"),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="Additional notes about the stock item"
                    ),
                ),
                (
                    "metal_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("stainless_steel", "Stainless Steel"),
                            ("mild_steel", "Mild Steel"),
                            ("aluminum", "Aluminum"),
                            ("brass", "Brass"),
                            ("copper", "Copper"),
                            ("titanium", "Titanium"),
                            ("zinc", "Zinc"),
                            ("galvanized", "Galvanized"),
                            ("unspecified", "Unspecified"),
                            ("other", "Other"),
                        ],
                        default="unspecified",
                        help_text="Type of metal",
                        max_length=100,
                    ),
                ),
                (
                    "alloy",
                    models.CharField(
                        blank=True,
                        help_text="Alloy specification (e.g., 304, 6061)",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "specifics",
                    models.CharField(
                        blank=True,
                        help_text="Specific details (e.g., m8 countersunk socket screw)",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        db_index=True,
                        default=True,
                        help_text="False when quantity reaches zero or item is fully consumed/transformed",
                    ),
                ),
                (
                    "job",
                    models.ForeignKey(
                        blank=True,
                        help_text="The job this stock item is assigned to",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="stock_items",
                        to="job.job",
                    ),
                ),
                (
                    "source_parent_stock",
                    models.ForeignKey(
                        blank=True,
                        help_text="The parent stock item this was split from (if source='split_from_stock')",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="child_stock_splits",
                        to="purchasing.stock",
                    ),
                ),
                (
                    "source_purchase_order_line",
                    models.ForeignKey(
                        blank=True,
                        help_text="The PO line this stock originated from (if source='purchase_order')",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="stock_generated",
                        to="purchasing.purchaseorderline",
                    ),
                ),
            ],            options={
                "db_table": "workflow_stock",
            },
        ),
    ]

    operations = [
        migrations.SeparateDatabaseAndState(
            state_operations=[],  # No state operations - models already defined
            # No database operations - table already exists from workflow migration
            database_operations=[]
        )
    ]
