openapi: 3.0.3
info:
  title: MSM Jobs Manager API
  version: 1.0.0
paths:
  /accounting/api/reports/calendar/:
    get:
      operationId: accounting_api_reports_calendar_retrieve
      description: API Endpoint to provide KPI data for calendar display
      tags:
      - accounting
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KPICalendarData'
          description: ''
  /accounting/api/reports/job-aging/:
    get:
      operationId: accounting_api_reports_job_aging_retrieve
      description: |-
        Get job aging data.

        Query Parameters:
            include_archived (bool): Whether to include archived jobs. Defaults to False.

        Returns:
            JSON response with job aging data structure
      tags:
      - accounting
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobAgingResponse'
          description: ''
  /accounts/api/staff/:
    get:
      operationId: accounts_api_staff_list
      description: |-
        API endpoint for listing and creating staff members.

        Supports both GET (list all staff) and POST (create new staff) operations.
        Requires authentication and staff permissions. Handles multipart/form data
        for file uploads (e.g., profile pictures).
      tags:
      - accounts
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Staff'
          description: ''
    post:
      operationId: accounts_api_staff_create
      description: |-
        API endpoint for listing and creating staff members.

        Supports both GET (list all staff) and POST (create new staff) operations.
        Requires authentication and staff permissions. Handles multipart/form data
        for file uploads (e.g., profile pictures).
      tags:
      - accounts
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Staff'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Staff'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Staff'
          description: ''
  /accounts/api/staff/{id}/:
    get:
      operationId: accounts_api_staff_retrieve
      description: |-
        API endpoint for retrieving, updating, and deleting individual staff members.

        Supports GET (retrieve), PUT/PATCH (update), and DELETE operations on
        specific staff members. Includes comprehensive logging for update operations
        and handles multipart/form data for file uploads.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - accounts
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Staff'
          description: ''
    put:
      operationId: accounts_api_staff_update
      description: |-
        API endpoint for retrieving, updating, and deleting individual staff members.

        Supports GET (retrieve), PUT/PATCH (update), and DELETE operations on
        specific staff members. Includes comprehensive logging for update operations
        and handles multipart/form data for file uploads.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - accounts
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Staff'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Staff'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Staff'
          description: ''
    patch:
      operationId: accounts_api_staff_partial_update
      description: |-
        API endpoint for retrieving, updating, and deleting individual staff members.

        Supports GET (retrieve), PUT/PATCH (update), and DELETE operations on
        specific staff members. Includes comprehensive logging for update operations
        and handles multipart/form data for file uploads.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - accounts
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStaff'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStaff'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Staff'
          description: ''
    delete:
      operationId: accounts_api_staff_destroy
      description: |-
        API endpoint for retrieving, updating, and deleting individual staff members.

        Supports GET (retrieve), PUT/PATCH (update), and DELETE operations on
        specific staff members. Includes comprehensive logging for update operations
        and handles multipart/form data for file uploads.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - accounts
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /accounts/api/staff/all/:
    get:
      operationId: accounts_api_staff_all_list
      description: |-
        API endpoint for retrieving list of staff members for Kanban board.

        Supports filtering to return only actual users (excluding system/test accounts)
        based on the 'actual_users' query parameter.
      tags:
      - accounts
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KanbanStaff'
          description: ''
  /accounts/api/token/:
    post:
      operationId: accounts_api_token_create
      description: |-
        Customized token obtain view that handles password reset requirement
        and sets JWT tokens as httpOnly cookies
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomTokenObtainPair'
          description: ''
  /accounts/api/token/refresh/:
    post:
      operationId: accounts_api_token_refresh_create
      description: Customized token refresh view that uses httpOnly cookies
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /accounts/api/token/verify/:
    post:
      operationId: accounts_api_token_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
  /accounts/logout/:
    post:
      operationId: accounts_logout_create
      description: Custom logout view that clears JWT httpOnly cookies
      summary: Logs out the current user by clearing JWT cookies
      tags:
      - accounts
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
        '500':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /accounts/me/:
    get:
      operationId: accounts_me_retrieve
      description: Get current authenticated user information via JWT from httpOnly
        cookie
      summary: Returns the current authenticated user profile
      tags:
      - accounts
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
  /api/company-defaults/:
    get:
      operationId: api_company_defaults_retrieve
      description: |-
        API view for managing company default settings.

        This view provides endpoints to retrieve and update the company's default
        configuration settings. Only admin users are permitted to access these endpoints.

        Endpoints:
            GET: Retrieve current company defaults
            PUT: Update all company defaults (full update)
            PATCH: Partially update company defaults

        Permissions:
            - IsAdminUser: Only admin users can access this API

        Returns:
            Company defaults data serialized using CompanyDefaultsSerializer
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyDefaults'
          description: ''
    put:
      operationId: api_company_defaults_update
      description: |-
        API view for managing company default settings.

        This view provides endpoints to retrieve and update the company's default
        configuration settings. Only admin users are permitted to access these endpoints.

        Endpoints:
            GET: Retrieve current company defaults
            PUT: Update all company defaults (full update)
            PATCH: Partially update company defaults

        Permissions:
            - IsAdminUser: Only admin users can access this API

        Returns:
            Company defaults data serialized using CompanyDefaultsSerializer
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyDefaults'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CompanyDefaults'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CompanyDefaults'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyDefaults'
          description: ''
    patch:
      operationId: api_company_defaults_partial_update
      description: |-
        API view for managing company default settings.

        This view provides endpoints to retrieve and update the company's default
        configuration settings. Only admin users are permitted to access these endpoints.

        Endpoints:
            GET: Retrieve current company defaults
            PUT: Update all company defaults (full update)
            PATCH: Partially update company defaults

        Permissions:
            - IsAdminUser: Only admin users can access this API

        Returns:
            Company defaults data serialized using CompanyDefaultsSerializer
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCompanyDefaults'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCompanyDefaults'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCompanyDefaults'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyDefaults'
          description: ''
  /api/workflow/ai-providers/:
    get:
      operationId: api_workflow_ai_providers_list
      description: |-
        API endpoint that allows AI Providers to be viewed or edited.

        Provides standard CRUD operations and a custom action to set a
        provider as the default for the company.
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AIProvider'
          description: ''
    post:
      operationId: api_workflow_ai_providers_create
      description: |-
        API endpoint that allows AI Providers to be viewed or edited.

        Provides standard CRUD operations and a custom action to set a
        provider as the default for the company.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AIProviderCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AIProviderCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AIProviderCreateUpdate'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIProviderCreateUpdate'
          description: ''
  /api/workflow/ai-providers/{id}/:
    get:
      operationId: api_workflow_ai_providers_retrieve
      description: |-
        API endpoint that allows AI Providers to be viewed or edited.

        Provides standard CRUD operations and a custom action to set a
        provider as the default for the company.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this AI Provider.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIProvider'
          description: ''
    put:
      operationId: api_workflow_ai_providers_update
      description: |-
        API endpoint that allows AI Providers to be viewed or edited.

        Provides standard CRUD operations and a custom action to set a
        provider as the default for the company.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this AI Provider.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AIProviderCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AIProviderCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AIProviderCreateUpdate'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIProviderCreateUpdate'
          description: ''
    patch:
      operationId: api_workflow_ai_providers_partial_update
      description: |-
        API endpoint that allows AI Providers to be viewed or edited.

        Provides standard CRUD operations and a custom action to set a
        provider as the default for the company.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this AI Provider.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAIProviderCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAIProviderCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAIProviderCreateUpdate'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIProviderCreateUpdate'
          description: ''
    delete:
      operationId: api_workflow_ai_providers_destroy
      description: |-
        API endpoint that allows AI Providers to be viewed or edited.

        Provides standard CRUD operations and a custom action to set a
        provider as the default for the company.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this AI Provider.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/workflow/ai-providers/{id}/set-default/:
    post:
      operationId: api_workflow_ai_providers_set_default_create
      description: |-
        Set this provider as the default for the company.
        This will atomically unset any other provider that is currently the default
        for the same company.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this AI Provider.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AIProvider'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AIProvider'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AIProvider'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIProvider'
          description: ''
  /clients/{client_id}/contacts/:
    get:
      operationId: clients_contacts_retrieve
      description: Fetches contacts for a specific client.
      parameters:
      - in: path
        name: client_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - clients
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientContactsResponse'
          description: ''
  /clients/all/:
    get:
      operationId: clients_all_retrieve
      description: Lists all clients (only id and name) for fast dropdowns.
      tags:
      - clients
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientListResponse'
          description: ''
  /clients/contacts/:
    post:
      operationId: clients_contacts_create
      description: |-
        Create a new client contact.

        Expected JSON:
        {
            "client_id": "uuid-of-client",
            "name": "Contact Name",
            "email": "contact@example.com",
            "phone": "123-456-7890",
            "position": "Job Title",
            "is_primary": false,
            "notes": "Additional notes"
        }
      tags:
      - clients
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientContactCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClientContactCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClientContactCreateRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientContactCreateRequest'
          description: ''
  /clients/create/:
    post:
      operationId: clients_create_create
      description: Create a new client, first in Xero, then sync locally.
      tags:
      - clients
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClientCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClientCreateRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientCreateResponse'
          description: ''
  /clients/search/:
    get:
      operationId: clients_search_retrieve
      description: Searches clients by name following early return pattern.
      parameters:
      - in: query
        name: q
        schema:
          type: string
        description: Search query for client name
        required: true
      tags:
      - clients
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientSearchResponse'
          description: ''
  /job/api/job-files/:
    get:
      operationId: retrieveJobFilesApi
      description: Based on the request, serve a file for download or return the file
        list of the job.
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - file
          - json
      tags:
      - job
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobFile'
            '*/*':
              schema:
                $ref: '#/components/schemas/JobFile'
          description: ''
    post:
      operationId: uploadJobFilesApi
      description: Handle file uploads. Creates new files or updates existing ones
        with POST.
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - file
          - json
      tags:
      - job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobFileUploadSuccessResponse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobFileUploadSuccessResponse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobFileUploadSuccessResponse'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobFileUploadSuccessResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/JobFileUploadSuccessResponse'
          description: ''
    put:
      operationId: updateJobFilesApi
      description: |-
        Update an existing job file:
        - If a new file is provided (files[] in request), replace the file on disk.
        - If no file_obj is provided, only update print_on_jobsheet.
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - file
          - json
      tags:
      - job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobFileUpdateSuccessResponse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobFileUpdateSuccessResponse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobFileUpdateSuccessResponse'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobFileUpdateSuccessResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/JobFileUpdateSuccessResponse'
          description: ''
    delete:
      operationId: deleteJobFilesApi
      description: Delete a job file by its ID. (file_path param is actually the job_file.id)
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - file
          - json
      tags:
      - job
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /job/api/job-files/{file_path}:
    get:
      operationId: retrieveJobFilesApi_2
      description: Based on the request, serve a file for download or return the file
        list of the job.
      parameters:
      - in: path
        name: file_path
        schema:
          type: string
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - file
          - json
      tags:
      - job
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobFile'
            '*/*':
              schema:
                $ref: '#/components/schemas/JobFile'
          description: ''
    post:
      operationId: uploadJobFilesApi_2
      description: Handle file uploads. Creates new files or updates existing ones
        with POST.
      parameters:
      - in: path
        name: file_path
        schema:
          type: string
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - file
          - json
      tags:
      - job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobFileUploadSuccessResponse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobFileUploadSuccessResponse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobFileUploadSuccessResponse'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobFileUploadSuccessResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/JobFileUploadSuccessResponse'
          description: ''
    put:
      operationId: updateJobFilesApi_2
      description: |-
        Update an existing job file:
        - If a new file is provided (files[] in request), replace the file on disk.
        - If no file_obj is provided, only update print_on_jobsheet.
      parameters:
      - in: path
        name: file_path
        schema:
          type: string
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - file
          - json
      tags:
      - job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobFileUpdateSuccessResponse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobFileUpdateSuccessResponse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobFileUpdateSuccessResponse'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobFileUpdateSuccessResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/JobFileUpdateSuccessResponse'
          description: ''
    delete:
      operationId: deleteJobFilesApi_2
      description: Delete a job file by its ID. (file_path param is actually the job_file.id)
      parameters:
      - in: path
        name: file_path
        schema:
          type: string
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - file
          - json
      tags:
      - job
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /job/api/job-files/{job_number}:
    get:
      operationId: retrieveJobFilesApi_3
      description: Based on the request, serve a file for download or return the file
        list of the job.
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - file
          - json
      - in: path
        name: job_number
        schema:
          type: integer
        required: true
      tags:
      - job
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobFile'
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobFile'
          description: ''
    post:
      operationId: uploadJobFilesApi_3
      description: Handle file uploads. Creates new files or updates existing ones
        with POST.
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - file
          - json
      - in: path
        name: job_number
        schema:
          type: integer
        required: true
      tags:
      - job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobFileUploadSuccessResponse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobFileUploadSuccessResponse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobFileUploadSuccessResponse'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobFileUploadSuccessResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/JobFileUploadSuccessResponse'
          description: ''
    put:
      operationId: updateJobFilesApi_3
      description: |-
        Update an existing job file:
        - If a new file is provided (files[] in request), replace the file on disk.
        - If no file_obj is provided, only update print_on_jobsheet.
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - file
          - json
      - in: path
        name: job_number
        schema:
          type: integer
        required: true
      tags:
      - job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobFileUpdateSuccessResponse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobFileUpdateSuccessResponse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobFileUpdateSuccessResponse'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobFileUpdateSuccessResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/JobFileUpdateSuccessResponse'
          description: ''
    delete:
      operationId: deleteJobFilesApi_3
      description: Delete a job file by its ID. (file_path param is actually the job_file.id)
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - file
          - json
      - in: path
        name: job_number
        schema:
          type: integer
        required: true
      tags:
      - job
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /job/api/job/{job_id}/assignment:
    post:
      operationId: job_api_job_assignment_create
      description: API Endpoint for activities related to job assignment
      parameters:
      - in: path
        name: job_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignJobRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssignJobRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssignJobRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignJobResponse'
          description: ''
    delete:
      operationId: job_api_job_assignment_destroy
      description: API Endpoint for activities related to job assignment
      parameters:
      - in: path
        name: job_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - job
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /job/api/job/completed/:
    get:
      operationId: job_api_job_completed_list
      description: API Endpoint to provide Job data for archiving display
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - job
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCompleteJobList'
          description: ''
  /job/api/job/completed/archive:
    post:
      operationId: job_api_job_completed_archive_create
      description: API Endpoint to set 'paid' flag as True in the received jobs
      tags:
      - job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArchiveJobsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ArchiveJobsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ArchiveJobsRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArchiveJobsRequest'
          description: ''
  /job/api/jobs/{job_id}/quote-chat/:
    get:
      operationId: job_api_jobs_quote_chat_retrieve
      description: |-
        Load all chat messages for a specific job.

        Response format matches job_quote_chat_plan.md specification.
      parameters:
      - in: path
        name: job_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - job
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobQuoteChatHistoryResponse'
          description: ''
    post:
      operationId: job_api_jobs_quote_chat_create
      description: |-
        Save a new chat message (user or assistant).

        Expected JSON:
        {
            "message_id": "user-1234567892",
            "role": "user",
            "content": "Actually, make that 5 boxes instead",
            "metadata": {}
        }
      parameters:
      - in: path
        name: job_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobQuoteChat'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobQuoteChat'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobQuoteChat'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobQuoteChat'
          description: ''
    delete:
      operationId: job_api_jobs_quote_chat_destroy
      description: Delete all chat messages for a job (start fresh).
      parameters:
      - in: path
        name: job_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - job
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /job/api/jobs/{job_id}/quote-chat/{message_id}/:
    patch:
      operationId: job_api_jobs_quote_chat_partial_update
      description: |-
        Update an existing message (useful for streaming responses).

        Expected JSON:
        {
            "content": "Updated message content",
            "metadata": {"final": true}
        }
      parameters:
      - in: path
        name: job_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: message_id
        schema:
          type: string
        required: true
      tags:
      - job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedJobQuoteChatUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedJobQuoteChatUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedJobQuoteChatUpdate'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobQuoteChatUpdate'
          description: ''
  /job/api/jobs/{job_id}/quote-chat/interaction/:
    post:
      operationId: job_api_jobs_quote_chat_interaction_create
      description: |-
        Receives a user message, sends it to the MCPChatService for processing,
        and returns the AI's final response.

        The frontend is expected to first save the user's message via the
        JobQuoteChatHistoryView, and then call this endpoint to get the
        assistant's reply.
      parameters:
      - in: path
        name: job_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobQuoteChatInteractionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobQuoteChatInteractionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobQuoteChatInteractionRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobQuoteChatInteractionRequest'
          description: ''
  /job/api/jobs/{job_id}/reorder/:
    post:
      operationId: job_api_jobs_reorder_create
      description: Reorder job within or between columns - API endpoint.
      parameters:
      - in: path
        name: job_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobReorderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobReorderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobReorderRequest'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobReorderRequest'
          description: ''
  /job/api/jobs/{job_id}/update-status/:
    post:
      operationId: job_api_jobs_update_status_create
      description: Update job status - API endpoint.
      parameters:
      - in: path
        name: job_id
        schema:
          type: string
        required: true
      tags:
      - job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobStatusUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobStatusUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobStatusUpdateRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStatusUpdateRequest'
          description: ''
  /job/api/jobs/advanced-search/:
    get:
      operationId: job_api_jobs_advanced_search_retrieve
      description: Endpoint for advanced job search - API endpoint.
      tags:
      - job
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedSearchResponse'
          description: ''
  /job/api/jobs/fetch-all/:
    get:
      operationId: job_api_jobs_fetch_all_retrieve
      description: Fetch all jobs for Kanban board - API endpoint.
      tags:
      - job
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchAllJobsResponse'
          description: ''
  /job/api/jobs/fetch-by-column/{column_id}/:
    get:
      operationId: job_api_jobs_fetch_by_column_retrieve
      description: Fetch jobs by kanban column using new categorization system.
      parameters:
      - in: path
        name: column_id
        schema:
          type: string
        required: true
      tags:
      - job
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchJobsByColumnResponse'
          description: ''
  /job/api/jobs/fetch/{status}/:
    get:
      operationId: job_api_jobs_fetch_retrieve
      description: Fetch jobs by status with optional search - API endpoint.
      parameters:
      - in: path
        name: status
        schema:
          type: string
        required: true
      tags:
      - job
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchJobsResponse'
          description: ''
  /job/api/jobs/status-values/:
    get:
      operationId: job_api_jobs_status_values_retrieve
      description: Return available status values for Kanban - API endpoint.
      tags:
      - job
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchStatusValuesResponse'
          description: ''
  /job/job/{job_id}/workshop-pdf/:
    get:
      operationId: job_job_workshop_pdf_retrieve
      description: Generate and return a workshop PDF for printing.
      parameters:
      - in: path
        name: job_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - job
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkshopPDFResponse'
          description: ''
  /job/rest/cost_lines/{cost_line_id}/:
    patch:
      operationId: job_rest_cost_lines_partial_update
      description: Update a cost line
      parameters:
      - in: path
        name: cost_line_id
        schema:
          type: integer
        required: true
      tags:
      - job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCostLineCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCostLineCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCostLineCreateUpdate'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostLineCreateUpdate'
          description: ''
  /job/rest/cost_lines/{cost_line_id}/delete/:
    delete:
      operationId: job_rest_cost_lines_delete_destroy
      description: Delete a cost line
      parameters:
      - in: path
        name: cost_line_id
        schema:
          type: integer
        required: true
      tags:
      - job
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /job/rest/jobs/:
    post:
      operationId: job_rest_jobs_create
      description: |-
        Create a new Job.

        Expected JSON:
        {
            "name": "Job Name",
            "client_id": "client-uuid",
            "description": "Optional description",
            "order_number": "Optional order number",
            "notes": "Optional notes",
            "contact_id": "optional-contact-uuid"
        }
      tags:
      - job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobCreateRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobCreateRequest'
          description: ''
  /job/rest/jobs/{job_id}/:
    get:
      operationId: job_rest_jobs_retrieve
      description: Fetch complete Job data for editing.
      parameters:
      - in: path
        name: job_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - job
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDetailResponse'
          description: ''
    put:
      operationId: job_rest_jobs_update
      description: Update Job data (autosave).
      parameters:
      - in: path
        name: job_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobUpdateRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDetailResponse'
          description: ''
    delete:
      operationId: job_rest_jobs_destroy
      description: Delete a Job if permitted.
      parameters:
      - in: path
        name: job_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - job
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /job/rest/jobs/{job_id}/cost_sets/{kind}/cost_lines/:
    post:
      operationId: job_rest_jobs_cost_sets_cost_lines_create
      description: Create a new cost line
      parameters:
      - in: path
        name: job_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: kind
        schema:
          type: string
        required: true
      tags:
      - job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostLineCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CostLineCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CostLineCreateUpdate'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostLineCreateUpdate'
          description: ''
  /job/rest/jobs/{job_id}/cost_sets/actual/cost_lines/:
    post:
      operationId: job_rest_jobs_cost_sets_actual_cost_lines_create
      description: Create a new cost line
      parameters:
      - in: path
        name: job_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostLineCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CostLineCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CostLineCreateUpdate'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostLineCreateUpdate'
          description: ''
  /job/rest/jobs/{job_id}/events/:
    post:
      operationId: job_rest_jobs_events_create
      description: |-
        Add a manual event to the Job.

        Expected JSON:
        {
            "description": "Event description"
        }
      parameters:
      - in: path
        name: job_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobEventCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobEventCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobEventCreateRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobEventCreateResponse'
          description: ''
  /job/rest/jobs/{job_id}/quote/status/:
    get:
      operationId: job_rest_jobs_quote_status_retrieve
      description: Get quote status for job
      parameters:
      - in: path
        name: job_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - job
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuoteImportStatusResponse'
          description: ''
  /job/rest/jobs/{job_id}/workshop-pdf/:
    get:
      operationId: job_rest_jobs_workshop_pdf_retrieve
      description: Generate and return a workshop PDF for printing.
      parameters:
      - in: path
        name: job_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - job
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkshopPDFResponse'
          description: ''
  /job/rest/jobs/{id}/cost_sets/{kind}/:
    get:
      operationId: job_rest_jobs_cost_sets_retrieve
      description: |-
        Get the latest CostSet for a job by kind.

        Args:
            pk: Job primary key (UUID)
            kind: CostSet kind ('estimate', 'quote', or 'actual')

        Returns:
            Response: Serialized CostSet data or 404
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: kind
        schema:
          type: string
        required: true
      tags:
      - job
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostSet'
          description: ''
  /job/rest/jobs/{id}/cost_sets/quote/revise/:
    post:
      operationId: job_rest_jobs_cost_sets_quote_revise_create
      description: |-
        Create a new quote revision by archiving current quote data and clearing cost lines.

        This endpoint:
        1. Archives current quote cost lines and summary in the existing CostSet summary
        2. Clears all current cost lines from the quote CostSet
        3. Increments the revision number
        4. Allows starting fresh quote while preserving historical data

        Only works with kind='quote' CostSets.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuoteRevisionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QuoteRevisionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QuoteRevisionRequest'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuoteRevisionResponse'
          description: ''
  /job/rest/jobs/{id}/quote/apply/:
    post:
      operationId: job_rest_jobs_quote_apply_create
      description: |-
        Apply quote import from linked Google Sheet.

        POST /job/rest/jobs/<uuid:pk>/quote/apply/
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplyQuoteResponse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ApplyQuoteResponse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ApplyQuoteResponse'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplyQuoteResponse'
          description: ''
  /job/rest/jobs/{id}/quote/link/:
    post:
      operationId: job_rest_jobs_quote_link_create
      description: |-
        Link a job to a Google Sheets quote template.

        POST /job/rest/jobs/<uuid:pk>/quote/link/
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkQuoteSheetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LinkQuoteSheetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LinkQuoteSheetRequest'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkQuoteSheetRequest'
          description: ''
  /job/rest/jobs/{id}/quote/preview/:
    post:
      operationId: job_rest_jobs_quote_preview_create
      description: |-
        Preview quote import from linked Google Sheet.

        POST /job/rest/jobs/<uuid:pk>/quote/preview/
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreviewQuoteResponse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PreviewQuoteResponse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PreviewQuoteResponse'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreviewQuoteResponse'
          description: ''
  /job/rest/jobs/files/:
    get:
      operationId: retrieveJobFilesApi_4
      description: Based on the request, serve a file for download or return the file
        list of the job.
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - file
          - json
      tags:
      - job
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobFile'
            '*/*':
              schema:
                $ref: '#/components/schemas/JobFile'
          description: ''
    post:
      operationId: uploadJobFilesApi_4
      description: Handle file uploads. Creates new files or updates existing ones
        with POST.
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - file
          - json
      tags:
      - job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobFileUploadSuccessResponse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobFileUploadSuccessResponse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobFileUploadSuccessResponse'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobFileUploadSuccessResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/JobFileUploadSuccessResponse'
          description: ''
    put:
      operationId: updateJobFilesApi_4
      description: |-
        Update an existing job file:
        - If a new file is provided (files[] in request), replace the file on disk.
        - If no file_obj is provided, only update print_on_jobsheet.
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - file
          - json
      tags:
      - job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobFileUpdateSuccessResponse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobFileUpdateSuccessResponse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobFileUpdateSuccessResponse'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobFileUpdateSuccessResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/JobFileUpdateSuccessResponse'
          description: ''
    delete:
      operationId: deleteJobFilesApi_4
      description: Delete a job file by its ID. (file_path param is actually the job_file.id)
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - file
          - json
      tags:
      - job
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /job/rest/jobs/files/{file_id}/thumbnail/:
    get:
      operationId: getJobFileThumbnail
      description: |-
        API view for serving JPEG thumbnails of job files.

        This view generates and serves thumbnail images for job files that
        support thumbnail generation (typically image files). Thumbnails are
        cached on disk and served via file response for efficient delivery.

        GET: Returns a JPEG thumbnail for the specified file ID, or 404 if
             the thumbnail doesn't exist or cannot be generated.
      parameters:
      - in: path
        name: file_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - job
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobFileThumbnailErrorResponse'
          description: ''
  /job/rest/jobs/files/{file_path}/:
    get:
      operationId: retrieveJobFilesApi_5
      description: Based on the request, serve a file for download or return the file
        list of the job.
      parameters:
      - in: path
        name: file_path
        schema:
          type: string
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - file
          - json
      tags:
      - job
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobFile'
            '*/*':
              schema:
                $ref: '#/components/schemas/JobFile'
          description: ''
    post:
      operationId: uploadJobFilesApi_5
      description: Handle file uploads. Creates new files or updates existing ones
        with POST.
      parameters:
      - in: path
        name: file_path
        schema:
          type: string
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - file
          - json
      tags:
      - job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobFileUploadSuccessResponse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobFileUploadSuccessResponse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobFileUploadSuccessResponse'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobFileUploadSuccessResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/JobFileUploadSuccessResponse'
          description: ''
    put:
      operationId: updateJobFilesApi_5
      description: |-
        Update an existing job file:
        - If a new file is provided (files[] in request), replace the file on disk.
        - If no file_obj is provided, only update print_on_jobsheet.
      parameters:
      - in: path
        name: file_path
        schema:
          type: string
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - file
          - json
      tags:
      - job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobFileUpdateSuccessResponse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobFileUpdateSuccessResponse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobFileUpdateSuccessResponse'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobFileUpdateSuccessResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/JobFileUpdateSuccessResponse'
          description: ''
    delete:
      operationId: deleteJobFilesApi_5
      description: Delete a job file by its ID. (file_path param is actually the job_file.id)
      parameters:
      - in: path
        name: file_path
        schema:
          type: string
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - file
          - json
      tags:
      - job
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /job/rest/jobs/files/{job_number}/:
    get:
      operationId: retrieveJobFilesApi_6
      description: Based on the request, serve a file for download or return the file
        list of the job.
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - file
          - json
      - in: path
        name: job_number
        schema:
          type: integer
        required: true
      tags:
      - job
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobFile'
            '*/*':
              schema:
                $ref: '#/components/schemas/JobFile'
          description: ''
    post:
      operationId: uploadJobFilesApi_6
      description: Handle file uploads. Creates new files or updates existing ones
        with POST.
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - file
          - json
      - in: path
        name: job_number
        schema:
          type: integer
        required: true
      tags:
      - job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobFileUploadSuccessResponse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobFileUploadSuccessResponse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobFileUploadSuccessResponse'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobFileUploadSuccessResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/JobFileUploadSuccessResponse'
          description: ''
    put:
      operationId: updateJobFilesApi_6
      description: |-
        Update an existing job file:
        - If a new file is provided (files[] in request), replace the file on disk.
        - If no file_obj is provided, only update print_on_jobsheet.
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - file
          - json
      - in: path
        name: job_number
        schema:
          type: integer
        required: true
      tags:
      - job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobFileUpdateSuccessResponse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobFileUpdateSuccessResponse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobFileUpdateSuccessResponse'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobFileUpdateSuccessResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/JobFileUpdateSuccessResponse'
          description: ''
    delete:
      operationId: deleteJobFilesApi_6
      description: Delete a job file by its ID. (file_path param is actually the job_file.id)
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - file
          - json
      - in: path
        name: job_number
        schema:
          type: integer
        required: true
      tags:
      - job
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /job/rest/jobs/weekly-metrics/:
    get:
      operationId: job_rest_jobs_weekly_metrics_retrieve
      summary: Get weekly metrics for jobs
      parameters:
        - in: query
          name: week
          schema:
            type: string
            format: date
          required: false
          description: Week date (YYYY-MM-DD) to calculate metrics for. Defaults to current week.
      responses:
        '200':
          description: Weekly metrics data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeeklyMetricsResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobRestErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobRestErrorResponse'
      tags:
      - job
      security:
      - cookieAuth: []
  /job/rest/jobs/files/upload/:
    post:
      operationId: uploadJobFilesRest
      description: |-
        REST API view for uploading files to jobs.

        Handles multipart file uploads, saves files to the Dropbox workflow folder,
        and creates JobFile database records with proper file metadata.
      tags:
      - job
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobFileUploadViewResponse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobFileUploadViewResponse'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobFileUploadViewResponse'
          description: ''
  /job/rest/month-end/:
    get:
      operationId: job_rest_month_end_retrieve
      description: |-
        REST API view for month-end processing of special jobs and stock data.

        GET: Returns special jobs data and stock job information for month-end review
        POST: Processes selected jobs for month-end archiving and status updates
      tags:
      - job
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonthEndGetResponse'
          description: ''
    post:
      operationId: job_rest_month_end_create
      description: |-
        REST API view for month-end processing of special jobs and stock data.

        GET: Returns special jobs data and stock job information for month-end review
        POST: Processes selected jobs for month-end archiving and status updates
      tags:
      - job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonthEndPostResponse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MonthEndPostResponse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MonthEndPostResponse'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonthEndPostResponse'
          description: ''
  /job/rest/timesheet/entries/:
    get:
      operationId: job_rest_timesheet_entries_retrieve
      description: Get timesheet entries (CostLines) for a specific staff member and
        date
      tags:
      - job
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModernTimesheetEntryGetResponse'
          description: ''
    post:
      operationId: job_rest_timesheet_entries_create
      description: Create a timesheet entry as a CostLine in the actual CostSet
      tags:
      - job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModernTimesheetEntryPostResponse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ModernTimesheetEntryPostResponse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ModernTimesheetEntryPostResponse'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModernTimesheetEntryPostResponse'
          description: ''
  /job/rest/timesheet/jobs/{job_id}/:
    get:
      operationId: job_rest_timesheet_jobs_retrieve
      description: Get all timesheet cost lines for a job
      parameters:
      - in: path
        name: job_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - job
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModernTimesheetJobGetResponse'
          description: ''
  /job/rest/timesheet/staff/{staff_id}/date/{entry_date}/:
    get:
      operationId: job_rest_timesheet_staff_date_retrieve
      description: Get all cost lines for a staff member on a specific date
      parameters:
      - in: path
        name: entry_date
        schema:
          type: string
        required: true
      - in: path
        name: staff_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - job
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModernTimesheetDayGetResponse'
          description: ''
  /purchasing/api/delivery-receipts/process/:
    post:
      operationId: purchasing_api_delivery_receipts_process_create
      description: |-
        REST API view for processing delivery receipts.

        POST: Processes delivery receipt for a purchase order with stock allocations
      tags:
      - purchasing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryReceiptRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeliveryReceiptRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeliveryReceiptRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryReceiptRequest'
          description: ''
  /purchasing/api/purchase-orders/{purchase_order_id}/email/:
    post:
      operationId: purchasing_api_purchase_orders_email_create
      description: |-
        Generate and return email details for the specified purchase order.

        Args:
            request: The HTTP request
            purchase_order_id: UUID of the purchase order

        Returns:
            Response: Email details if successful
            Response: Error details if unsuccessful
      parameters:
      - in: path
        name: purchase_order_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - purchasing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderEmailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PurchaseOrderEmailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PurchaseOrderEmailRequest'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderEmailRequest'
          description: ''
  /purchasing/api/purchase-orders/{purchase_order_id}/pdf/:
    get:
      operationId: purchasing_api_purchase_orders_pdf_retrieve
      description: |-
        Generate and return a PDF for the specified purchase order.

        Args:
            request: The HTTP request
            purchase_order_id: UUID of the purchase order

        Returns:
            FileResponse: PDF file if successful
            Response: Error details if unsuccessful
      parameters:
      - in: path
        name: purchase_order_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - purchasing
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderPDFResponse'
          description: ''
  /purchasing/rest/all-jobs/:
    get:
      operationId: purchasing_rest_all_jobs_retrieve
      description: Get all jobs with stock holding job flag.
      tags:
      - purchasing
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllJobsResponse'
          description: ''
  /purchasing/rest/delivery-receipts/:
    post:
      operationId: purchasing_rest_delivery_receipts_create
      description: |-
        REST API view for processing delivery receipts.

        POST: Processes delivery receipt for a purchase order with stock allocations
      tags:
      - purchasing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryReceiptRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeliveryReceiptRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeliveryReceiptRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryReceiptRequest'
          description: ''
  /purchasing/rest/jobs/:
    get:
      operationId: purchasing_rest_jobs_retrieve
      description: Get list of jobs suitable for purchasing operations.
      tags:
      - purchasing
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchasingJobsResponse'
          description: ''
  /purchasing/rest/purchase-orders/:
    get:
      operationId: listPurchaseOrders
      description: Get list of purchase orders with optional status filtering.
      tags:
      - purchasing
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderList'
          description: ''
    post:
      operationId: purchasing_rest_purchase_orders_create
      description: Create new purchase order.
      tags:
      - purchasing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PurchaseOrderCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PurchaseOrderCreate'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderCreate'
          description: ''
  /purchasing/rest/purchase-orders/{id}/:
    get:
      operationId: retrievePurchaseOrder
      description: Get purchase order details including lines.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - purchasing
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderDetail'
          description: ''
    patch:
      operationId: purchasing_rest_purchase_orders_partial_update
      description: Update purchase order.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - purchasing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPurchaseOrderUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPurchaseOrderUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPurchaseOrderUpdate'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderUpdate'
          description: ''
  /purchasing/rest/purchase-orders/{po_id}/allocations/:
    get:
      operationId: purchasing_rest_purchase_orders_allocations_retrieve
      description: Get existing allocations for a purchase order.
      parameters:
      - in: path
        name: po_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - purchasing
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderAllocationsResponse'
          description: ''
  /purchasing/rest/stock/:
    get:
      operationId: purchasing_rest_stock_retrieve
      description: Get list of all active stock items.
      tags:
      - purchasing
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockList'
          description: ''
    post:
      operationId: purchasing_rest_stock_create
      description: Create new stock item.
      tags:
      - purchasing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StockCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StockCreate'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockCreate'
          description: ''
  /purchasing/rest/stock/{stock_id}/:
    delete:
      operationId: purchasing_rest_stock_destroy
      description: |-
        REST API view for deactivating stock items.

        DELETE: Marks a stock item as inactive instead of deleting it
      parameters:
      - in: path
        name: stock_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - purchasing
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /purchasing/rest/stock/{stock_id}/consume/:
    post:
      operationId: purchasing_rest_stock_consume_create
      description: |-
        REST API view for consuming stock items for jobs.

        POST: Records stock consumption for a specific job, reducing available quantity
      parameters:
      - in: path
        name: stock_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - purchasing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockConsumeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StockConsumeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StockConsumeRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockConsumeRequest'
          description: ''
  /purchasing/rest/xero-items/:
    get:
      operationId: purchasing_rest_xero_items_retrieve
      description: Return list of items from Xero.
      tags:
      - purchasing
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XeroItemListResponse'
          description: ''
  /quoting/api/django-job-executions/:
    get:
      operationId: quoting_api_django_job_executions_list
      parameters:
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - quoting
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DjangoJobExecution'
          description: ''
  /quoting/api/django-job-executions/{id}/:
    get:
      operationId: quoting_api_django_job_executions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
          description: Unique ID for this job execution.
        required: true
      tags:
      - quoting
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DjangoJobExecution'
          description: ''
  /quoting/api/django-jobs/:
    get:
      operationId: quoting_api_django_jobs_list
      parameters:
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - quoting
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DjangoJob'
          description: ''
    post:
      operationId: quoting_api_django_jobs_create
      tags:
      - quoting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DjangoJob'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DjangoJob'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DjangoJob'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DjangoJob'
          description: ''
  /quoting/api/django-jobs/{id}/:
    get:
      operationId: quoting_api_django_jobs_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          description: Unique id for this job.
        required: true
      tags:
      - quoting
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DjangoJob'
          description: ''
    put:
      operationId: quoting_api_django_jobs_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          description: Unique id for this job.
        required: true
      tags:
      - quoting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DjangoJob'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DjangoJob'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DjangoJob'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DjangoJob'
          description: ''
    patch:
      operationId: quoting_api_django_jobs_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          description: Unique id for this job.
        required: true
      tags:
      - quoting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDjangoJob'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDjangoJob'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDjangoJob'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DjangoJob'
          description: ''
    delete:
      operationId: quoting_api_django_jobs_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          description: Unique id for this job.
        required: true
      tags:
      - quoting
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /timesheets/api/daily/:
    get:
      operationId: getDailyTimesheetSummaryByDate
      description: |-
        Get daily timesheet summary for all staff

        Args:
            target_date: Date in YYYY-MM-DD format (optional, defaults to today)

        Returns:
            JSON response with daily timesheet data
      tags:
      - timesheets
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DailyTimesheetSummary'
          description: ''
  /timesheets/api/daily/{target_date}/:
    get:
      operationId: getDailyTimesheetSummaryByDate_2
      description: |-
        Get daily timesheet summary for all staff

        Args:
            target_date: Date in YYYY-MM-DD format (optional, defaults to today)

        Returns:
            JSON response with daily timesheet data
      parameters:
      - in: path
        name: target_date
        schema:
          type: string
        required: true
      tags:
      - timesheets
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DailyTimesheetSummary'
          description: ''
  /timesheets/api/jobs/:
    get:
      operationId: timesheets_api_jobs_retrieve
      description: Get list of active jobs for timesheet entries using CostSet system.
      tags:
      - timesheets
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobsListResponse'
          description: ''
  /timesheets/api/staff/:
    get:
      operationId: timesheets_api_staff_retrieve
      description: Get filtered list of staff members.
      tags:
      - timesheets
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffListResponse'
          description: ''
  /timesheets/api/staff/{staff_id}/daily/:
    get:
      operationId: getStaffDailyTimesheetDetailByDate
      description: |-
        Get detailed timesheet data for a specific staff member

        Args:
            staff_id: Staff member ID
            target_date: Date in YYYY-MM-DD format (optional, defaults to today)

        Returns:
            JSON response with staff timesheet detail
      parameters:
      - in: path
        name: staff_id
        schema:
          type: string
        required: true
      tags:
      - timesheets
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DailyTimesheetSummary'
          description: ''
  /timesheets/api/staff/{staff_id}/daily/{target_date}/:
    get:
      operationId: getStaffDailyTimesheetDetailByDate_2
      description: |-
        Get detailed timesheet data for a specific staff member

        Args:
            staff_id: Staff member ID
            target_date: Date in YYYY-MM-DD format (optional, defaults to today)

        Returns:
            JSON response with staff timesheet detail
      parameters:
      - in: path
        name: staff_id
        schema:
          type: string
        required: true
      - in: path
        name: target_date
        schema:
          type: string
        required: true
      tags:
      - timesheets
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DailyTimesheetSummary'
          description: ''
  /timesheets/api/weekly/:
    get:
      operationId: timesheets_api_weekly_retrieve
      description: |-
        Get comprehensive weekly timesheet data.

        Query Parameters:
            start_date (optional): Monday of target week in YYYY-MM-DD format
            export_to_ims (optional): Boolean to include IMS-specific data

        Returns:
            Comprehensive weekly timesheet data including:
            - Staff data with daily breakdowns
            - Weekly totals and metrics
            - Job statistics
            - Summary statistics
      tags:
      - timesheets
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeeklyTimesheetData'
          description: ''
    post:
      operationId: timesheets_api_weekly_create
      description: |-
        Submit paid absence request.

        Expected payload:
        {
            "staff_id": "uuid",
            "start_date": "YYYY-MM-DD",
            "end_date": "YYYY-MM-DD",
            "leave_type": "annual|sick|other",
            "hours_per_day": 8.0,
            "description": "Optional description"
        }
      tags:
      - timesheets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WeeklyTimesheetData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WeeklyTimesheetData'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WeeklyTimesheetData'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeeklyTimesheetData'
          description: ''
  /xero-errors/:
    get:
      operationId: xero_errors_list
      description: |-
        API view for listing Xero synchronization errors.

        Returns a paginated list of all XeroError records ordered by timestamp
        (most recent first). Useful for monitoring and debugging Xero integration
        issues.

        Endpoint: /api/xero/errors/
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - xero-errors
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedXeroErrorList'
          description: ''
  /xero-errors/{id}/:
    get:
      operationId: xero_errors_retrieve
      description: |-
        API view for retrieving a single Xero synchronization error.

        Returns detailed information about a specific XeroError record
        including error message, context, and timestamp. Used for investigating
        specific Xero integration failures.

        Endpoint: /api/xero/errors/<id>/
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - xero-errors
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XeroError'
          description: ''
components:
  schemas:
    AIProvider:
    WeeklyMetrics:
      type: object
      properties:
        job_id:
          type: string
          format: uuid
        name:
          type: string
        client:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        status:
          type: string
        people:
          type: array
          items:
            type: object
        estimated_hours:
          type: number
        actual_hours:
          type: number
        profit:
          type: number
      required:
        - job_id
        - name
        - client
        - description
        - status
        - people
        - estimated_hours
        - actual_hours
        - profit
    WeeklyMetricsResponse:
      type: array
      items:
        $ref: '#/components/schemas/WeeklyMetrics'
    AIProviderCreateUpdate:
      type: object
      description: |-
        Serializer for creating and updating AIProvider instances.
        This serializer handles the `api_key` securely by making it write-only.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Friendly name for this provider
          maxLength: 100
        provider_type:
          allOf:
          - $ref: '#/components/schemas/ProviderTypeEnum'
          description: |-
            Type of AI provider

            * `Claude` - Anthropic
            * `Gemini` - Google
            * `Mistral` - Mistral
        model_name:
          type: string
          description: Specific model name (e.g., gemini-2.5-flash-lite-preview-06-17)
          maxLength: 100
        default:
          type: boolean
          description: Use this provider as the default
        api_key:
          type: string
          writeOnly: true
          description: API Key for the provider. Leave blank to keep unchanged on
            update.
        company:
          type: string
          readOnly: true
      required:
      - company
      - id
      - name
      - provider_type
    AdvancedSearchResponse:
      type: object
      description: Serializer for advanced_search response.
      properties:
        success:
          type: boolean
          default: true
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/KanbanJob'
        total:
          type: integer
        error:
          type: string
    AllJobsResponse:
      type: object
      description: Serializer for AllJobsAPIView response.
      properties:
        success:
          type: boolean
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/JobForPurchasing'
        stock_holding_job_id:
          type: string
      required:
      - jobs
      - stock_holding_job_id
      - success
    AllocationItem:
      type: object
      description: Serializer for individual allocation items (job or stock).
      properties:
        type:
          $ref: '#/components/schemas/TypeEnum'
        job_id:
          type: string
          format: uuid
        job_name:
          type: string
        quantity:
          type: number
          format: double
        retail_rate:
          type: number
          format: double
          default: 0.0
        allocation_date:
          type: string
          format: date-time
          nullable: true
        description:
          type: string
        stock_location:
          type: string
          nullable: true
      required:
      - allocation_date
      - description
      - job_id
      - job_name
      - quantity
      - type
    ApplyQuoteResponse:
      type: object
      description: Serializer for apply quote response.
      properties:
        success:
          type: boolean
        cost_set:
          allOf:
          - $ref: '#/components/schemas/CostSet'
          nullable: true
        draft_lines:
          type: array
          items:
            $ref: '#/components/schemas/DraftLine'
        changes:
          $ref: '#/components/schemas/QuoteChanges'
        error:
          type: string
      required:
      - success
    ArchiveJobsRequest:
      type: object
      description: Serialiser for job archiving request
      properties:
        ids:
          type: array
          items:
            type: string
          description: List of job IDs to archive
      required:
      - ids
    AssignJobRequest:
      type: object
      description: Serialiser for job assignment request
      properties:
        job_id:
          type: string
          description: Job ID
        staff_id:
          type: string
          description: Staff ID
      required:
      - job_id
      - staff_id
    AssignJobResponse:
      type: object
      description: Serialiser for job assignment response
      properties:
        success:
          type: boolean
        message:
          type: string
        error:
          type: string
      required:
      - success
    BlankEnum:
      enum:
      - ''
    ClientContactCreateRequest:
      type: object
      description: Serializer for client contact creation request
      properties:
        client_id:
          type: string
          format: uuid
        name:
          type: string
          maxLength: 255
        email:
          type: string
          format: email
        phone:
          type: string
          maxLength: 50
        position:
          type: string
          maxLength: 255
        is_primary:
          type: boolean
          default: false
        notes:
          type: string
      required:
      - client_id
      - name
    ClientContactResult:
      type: object
      description: Serializer for individual client contact result
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        position:
          type: string
        is_primary:
          type: boolean
      required:
      - email
      - id
      - is_primary
      - name
      - phone
      - position
    ClientContactsResponse:
      type: object
      description: Serializer for client contacts response
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ClientContactResult'
      required:
      - results
    ClientCreateRequest:
      type: object
      description: Serializer for client creation request
      properties:
        name:
          type: string
          maxLength: 255
        email:
          type: string
          format: email
        phone:
          type: string
          maxLength: 50
        address:
          type: string
        is_account_customer:
          type: boolean
          default: true
      required:
      - name
    ClientListResponse:
      type: object
      description: Serializer for client list response
      properties:
        id:
          type: string
        name:
          type: string
      required:
      - id
      - name
    ClientSearchResponse:
      type: object
      description: Serializer for client search response
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ClientSearchResult'
      required:
      - results
    ClientSearchResult:
      type: object
      description: Serializer for individual client search result
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        address:
          type: string
        is_account_customer:
          type: boolean
        xero_contact_id:
          type: string
        last_invoice_date:
          type: string
        total_spend:
          type: string
        raw_json: {}
      required:
      - address
      - email
      - id
      - is_account_customer
      - last_invoice_date
      - name
      - phone
      - total_spend
      - xero_contact_id
    CompanyDefaults:
      type: object
      properties:
        company_name:
          type: string
          maxLength: 255
        ai_providers:
          type: array
          items:
            $ref: '#/components/schemas/AIProvider'
          readOnly: true
        is_primary:
          type: boolean
        time_markup:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        materials_markup:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        charge_out_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
        wage_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
        starting_job_number:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Helper field to set the starting job number based on the latest
            paper job
        starting_po_number:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Helper field to set the starting purchase order number
        po_prefix:
          type: string
          description: Prefix for purchase order numbers (e.g., PO-, JO-)
          maxLength: 10
        master_quote_template_url:
          type: string
          format: uri
          nullable: true
          description: URL to the master Google Sheets quote template
          maxLength: 200
        master_quote_template_id:
          type: string
          nullable: true
          description: Google Sheets ID for the quote template
          maxLength: 100
        gdrive_quotes_folder_url:
          type: string
          format: uri
          nullable: true
          description: URL to the Google Drive folder for storing quotes
          maxLength: 200
        gdrive_quotes_folder_id:
          type: string
          nullable: true
          description: Google Drive folder ID for storing quotes
          maxLength: 100
        xero_tenant_id:
          type: string
          nullable: true
          description: The Xero tenant ID to use for this company
          maxLength: 100
        mon_start:
          type: string
          format: time
        mon_end:
          type: string
          format: time
        tue_start:
          type: string
          format: time
        tue_end:
          type: string
          format: time
        wed_start:
          type: string
          format: time
        wed_end:
          type: string
          format: time
        thu_start:
          type: string
          format: time
        thu_end:
          type: string
          format: time
        fri_start:
          type: string
          format: time
        fri_end:
          type: string
          format: time
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        last_xero_sync:
          type: string
          format: date-time
          nullable: true
          description: The last time Xero data was synchronized
        last_xero_deep_sync:
          type: string
          format: date-time
          nullable: true
          description: The last time a deep Xero sync was performed (looking back
            90 days)
        shop_client_name:
          type: string
          nullable: true
          description: Name of the internal shop client for tracking shop work (e.g.,
            'MSM (Shop)')
          maxLength: 255
        billable_threshold_green:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          title: Green Threshold of Billable Hours
          description: Daily billable hours above this threshold are marked in green
        billable_threshold_amber:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          title: Amber Threshold of Billable Hours
          description: Daily billable hours between this threshold and the green threshold
            are marked in amber
        daily_gp_target:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          title: Daily Goal of Gross Profit
          description: Daily gross profit goal in dolars
        shop_hours_target_percentage:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          title: Hours percentage goal in Shop Jobs
          description: Target percentage of hours worked in shop jobs
      required:
      - ai_providers
      - company_name
      - created_at
      - updated_at
    CompleteJob:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        job_number:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        name:
          type: string
          maxLength: 100
        client_name:
          type: string
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        job_status:
          type: string
      required:
      - client_name
      - id
      - job_number
      - job_status
      - name
      - updated_at
    CostLine:
      type: object
      description: Serializer for CostLine model - read-only with basic depth
      properties:
        id:
          type: integer
          readOnly: true
        kind:
          $ref: '#/components/schemas/Kind332Enum'
        desc:
          type: string
          description: Description of this cost line
          maxLength: 255
        quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,7}(?:\.\d{0,3})?$
        unit_cost:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        unit_rev:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        total_cost:
          type: number
          format: double
          description: Get total cost (quantity * unit_cost)
          readOnly: true
        total_rev:
          type: number
          format: double
          description: Get total revenue (quantity * unit_rev)
          readOnly: true
        ext_refs:
          description: External references (e.g., time entry IDs, material IDs)
        meta:
          description: Additional metadata
      required:
      - desc
      - id
      - kind
      - total_cost
      - total_rev
    CostLineCreateUpdate:
      type: object
      description: Serializer for CostLine creation and updates - full write capabilities
      properties:
        kind:
          $ref: '#/components/schemas/Kind332Enum'
        desc:
          type: string
          description: Description of this cost line
          maxLength: 255
        quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,7}(?:\.\d{0,3})?$
        unit_cost:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        unit_rev:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        ext_refs:
          description: External references (e.g., time entry IDs, material IDs)
        meta:
          description: Additional metadata
      required:
      - desc
      - kind
    CostSet:
      type: object
      description: Serializer for CostSet model - includes nested cost lines
      properties:
        id:
          type: integer
          readOnly: true
        kind:
          allOf:
          - $ref: '#/components/schemas/CostSetKindEnum'
          readOnly: true
        rev:
          type: integer
          readOnly: true
        summary:
          readOnly: true
          description: Summary data for this cost set
        created:
          type: string
          format: date-time
          readOnly: true
        cost_lines:
          type: array
          items:
            $ref: '#/components/schemas/CostLine'
          readOnly: true
      required:
      - cost_lines
      - created
      - id
      - kind
      - rev
      - summary
    CostSetKindEnum:
      enum:
      - estimate
      - quote
      - actual
      type: string
      description: |-
        * `estimate` - Estimate
        * `quote` - Quote
        * `actual` - Actual
    CustomTokenObtainPair:
      type: object
      description: Custom serializer that accepts username and maps it to email
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - password
      - username
    DailyTimesheetSummary:
      type: object
      description: Serializer for complete daily timesheet summary
      properties:
        date:
          type: string
          format: date
        staff_data:
          type: array
          items:
            $ref: '#/components/schemas/StaffDailyData'
        daily_totals:
          $ref: '#/components/schemas/DailyTotals'
        summary_stats:
          $ref: '#/components/schemas/SummaryStats'
      required:
      - daily_totals
      - date
      - staff_data
      - summary_stats
    DailyTotals:
      type: object
      description: Serializer for daily totals
      properties:
        total_scheduled_hours:
          type: number
          format: double
        total_actual_hours:
          type: number
          format: double
        total_billable_hours:
          type: number
          format: double
        total_non_billable_hours:
          type: number
          format: double
        total_revenue:
          type: number
          format: double
        total_cost:
          type: number
          format: double
        total_entries:
          type: integer
        completion_percentage:
          type: number
          format: double
        billable_percentage:
          type: number
          format: double
        missing_hours:
          type: number
          format: double
      required:
      - billable_percentage
      - completion_percentage
      - missing_hours
      - total_actual_hours
      - total_billable_hours
      - total_cost
      - total_entries
      - total_non_billable_hours
      - total_revenue
      - total_scheduled_hours
    DeliveryReceiptAllocation:
      type: object
      description: Serializer for individual allocation within a delivery receipt
        line.
      properties:
        job_id:
          type: string
          format: uuid
        quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
      required:
      - job_id
      - quantity
    DeliveryReceiptLine:
      type: object
      description: Serializer for delivery receipt line allocation data.
      properties:
        total_received:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        allocations:
          type: array
          items:
            $ref: '#/components/schemas/DeliveryReceiptAllocation'
      required:
      - allocations
      - total_received
    DeliveryReceiptRequest:
      type: object
      description: Serializer for delivery receipt request data.
      properties:
        purchase_order_id:
          type: string
          format: uuid
        allocations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DeliveryReceiptLine'
          description: Dictionary where keys are PurchaseOrderLine IDs and values
            are allocation data
      required:
      - allocations
      - purchase_order_id
    DjangoJob:
      type: object
      properties:
        id:
          type: string
          description: Unique id for this job.
          maxLength: 255
        next_run_time:
          type: string
          format: date-time
          nullable: true
          description: Date and time at which this job is scheduled to be executed
            next.
        job_state:
          type: string
          format: byte
          readOnly: true
      required:
      - id
      - job_state
    DjangoJobExecution:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
          description: Unique ID for this job execution.
        job_id:
          type: string
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/DjangoJobExecutionStatusEnum'
          description: |-
            The current status of this job execution.

            * `Started execution` - Started execution
            * `Error!` - Error!
            * `Executed` - Executed
        run_time:
          type: string
          format: date-time
          description: Date and time at which this job was executed.
        duration:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
          nullable: true
          description: Total run time of this job (in seconds).
        exception:
          type: string
          nullable: true
          description: Details of exception that occurred during job execution (if
            any).
          maxLength: 1000
        traceback:
          type: string
          nullable: true
          description: Traceback of exception that occurred during job execution (if
            any).
      required:
      - id
      - job_id
      - run_time
      - status
    DjangoJobExecutionStatusEnum:
      enum:
      - Started execution
      - Error!
      - Executed
      type: string
      description: |-
        * `Started execution` - Started execution
        * `Error!` - Error!
        * `Executed` - Executed
    DraftLine:
      type: object
      description: Serializer for draft line data.
      properties:
        kind:
          type: string
        desc:
          type: string
        quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        unit_cost:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        unit_rev:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        total_cost:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        total_rev:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
      required:
      - desc
      - kind
      - quantity
      - total_cost
      - total_rev
      - unit_cost
      - unit_rev
    FetchAllJobsResponse:
      type: object
      description: Serializer for fetch_all_jobs response.
      properties:
        success:
          type: boolean
          default: true
        active_jobs:
          type: array
          items:
            $ref: '#/components/schemas/KanbanJob'
        archived_jobs:
          type: array
          items:
            $ref: '#/components/schemas/KanbanJob'
        total_archived:
          type: integer
        error:
          type: string
    FetchJobsByColumnResponse:
      type: object
      description: Serializer for fetch_jobs_by_column response.
      properties:
        success:
          type: boolean
          default: true
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/KanbanColumnJob'
        total:
          type: integer
        filtered_count:
          type: integer
        error:
          type: string
    FetchJobsResponse:
      type: object
      description: Serializer for fetch_jobs response.
      properties:
        success:
          type: boolean
          default: true
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/KanbanJob'
        total:
          type: integer
        filtered_count:
          type: integer
        error:
          type: string
    FetchStatusValuesResponse:
      type: object
      description: Serializer for fetch_status_values response.
      properties:
        success:
          type: boolean
          default: true
        statuses:
          type: object
          additionalProperties:
            type: string
        tooltips:
          type: object
          additionalProperties:
            type: string
        error:
          type: string
    Job:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
        client_id:
          type: string
          format: uuid
        client_name:
          type: string
          readOnly: true
        contact_id:
          type: string
          format: uuid
          nullable: true
        contact_name:
          type: string
          readOnly: true
        job_number:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        notes:
          type: string
          nullable: true
          description: Internal notes about the job. Not shown on the invoice.
        order_number:
          type: string
          nullable: true
          maxLength: 100
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        description:
          type: string
          nullable: true
          description: This becomes the first line item on the invoice
        latest_estimate:
          type: object
          additionalProperties: {}
          nullable: true
          description: Get the latest estimate CostSet
          readOnly: true
        latest_quote:
          type: object
          additionalProperties: {}
          nullable: true
          description: Get the latest quote CostSet
          readOnly: true
        latest_actual:
          type: object
          additionalProperties: {}
          nullable: true
          description: Get the latest actual CostSet
          readOnly: true
        job_status:
          type: string
        delivery_date:
          type: string
          format: date
          nullable: true
        paid:
          type: boolean
        quote_acceptance_date:
          type: string
          format: date-time
          nullable: true
        job_is_valid:
          type: boolean
        job_files:
          type: array
          items:
            $ref: '#/components/schemas/JobFile'
        charge_out_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        pricing_methodology:
          allOf:
          - $ref: '#/components/schemas/PricingMethodologyEnum'
          description: |-
            Determines whether job uses quotes or time and materials pricing type.

            * `time_materials` - Time & Materials
            * `fixed_price` - Fixed Price
        quote_sheet:
          allOf:
          - $ref: '#/components/schemas/QuoteSpreadsheet'
          readOnly: true
        quoted:
          type: boolean
          readOnly: true
        invoiced:
          type: boolean
          readOnly: true
        quote:
          type: object
          additionalProperties: {}
          nullable: true
          readOnly: true
        invoice:
          type: object
          additionalProperties: {}
          nullable: true
          readOnly: true
      required:
      - charge_out_rate
      - client_id
      - client_name
      - contact_name
      - created_at
      - id
      - invoice
      - invoiced
      - job_number
      - job_status
      - latest_actual
      - latest_estimate
      - latest_quote
      - name
      - quote
      - quote_sheet
      - quoted
      - updated_at
    JobAgingFinancialData:
      type: object
      description: Serialiser for job aging financial data
      properties:
        estimate_total:
          type: number
          format: double
        quote_total:
          type: number
          format: double
        actual_total:
          type: number
          format: double
      required:
      - actual_total
      - estimate_total
      - quote_total
    JobAgingJobData:
      type: object
      description: Serialiser for individual job aging data
      properties:
        id:
          type: string
        job_number:
          type: string
        name:
          type: string
        client_name:
          type: string
        status:
          type: string
        status_display:
          type: string
        financial_data:
          $ref: '#/components/schemas/JobAgingFinancialData'
        timing_data:
          $ref: '#/components/schemas/JobAgingTimingData'
      required:
      - client_name
      - financial_data
      - id
      - job_number
      - name
      - status
      - status_display
      - timing_data
    JobAgingResponse:
      type: object
      description: Serialiser for job aging API response
      properties:
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/JobAgingJobData'
      required:
      - jobs
    JobAgingTimingData:
      type: object
      description: Serialiser for job aging timing data
      properties:
        created_date:
          type: string
          format: date
        created_days_ago:
          type: integer
        days_in_current_status:
          type: integer
        last_activity_date:
          type: string
          format: date-time
          nullable: true
        last_activity_days_ago:
          type: integer
          nullable: true
        last_activity_type:
          type: string
          nullable: true
        last_activity_description:
          type: string
          nullable: true
      required:
      - created_date
      - created_days_ago
      - days_in_current_status
      - last_activity_date
      - last_activity_days_ago
    JobBreakdown:
      type: object
      description: Serializer for job breakdown data
      properties:
        job_id:
          type: string
        job_number:
          type: string
        job_name:
          type: string
        client:
          type: string
        hours:
          type: number
          format: double
        revenue:
          type: number
          format: double
        cost:
          type: number
          format: double
        is_billable:
          type: boolean
      required:
      - client
      - cost
      - hours
      - is_billable
      - job_id
      - job_name
      - job_number
      - revenue
    JobCreateRequest:
      type: object
      description: Serializer for job creation request data.
      properties:
        name:
          type: string
          maxLength: 255
        client_id:
          type: string
          format: uuid
        description:
          type: string
        order_number:
          type: string
        notes:
          type: string
        contact_id:
          type: string
          format: uuid
          nullable: true
      required:
      - client_id
      - name
    JobUpdateRequest:
      type: object
      description: Schema for updating job data.
      properties:
        name:
          type: string
          maxLength: 100
        client_id:
          type: string
          format: uuid
        contact_id:
          type: string
          format: uuid
          nullable: true
        description:
          type: string
          nullable: true
        notes:
          type: string
          nullable: true
        order_number:
          type: string
          nullable: true
          maxLength: 100
        pricing_methodology:
          type: string
          enum:
          - time_materials
          - fixed_price
    JobDetailResponse:
      type: object
      description: Serializer for job detail response.
      properties:
        success:
          type: boolean
          default: true
        data:
          $ref: '#/components/schemas/Job'
      required:
      - data
    JobFile:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        filename:
          type: string
          maxLength: 255
        size:
          type: integer
          nullable: true
          description: Get file size in bytes
          readOnly: true
        mime_type:
          type: string
          maxLength: 100
        uploaded_at:
          type: string
          format: date-time
          readOnly: true
        print_on_jobsheet:
          type: boolean
        download_url:
          type: string
          readOnly: true
        thumbnail_url:
          type: string
          nullable: true
          readOnly: true
        status:
          $ref: '#/components/schemas/JobFileStatusEnum'
      required:
      - download_url
      - filename
      - id
      - size
      - thumbnail_url
      - uploaded_at
    JobFileStatusEnum:
      enum:
      - active
      - deleted
      type: string
      description: |-
        * `active` - Active
        * `deleted` - Deleted
    JobFileThumbnailErrorResponse:
      type: object
      description: Serializer for thumbnail error response.
      properties:
        status:
          type: string
          default: error
        message:
          type: string
      required:
      - message
    JobFileUpdateSuccessResponse:
      type: object
      description: Serializer for successful file update response.
      properties:
        status:
          type: string
          default: success
        message:
          type: string
        print_on_jobsheet:
          type: boolean
      required:
      - message
      - print_on_jobsheet
    JobFileUploadSuccessResponse:
      type: object
      description: Serializer for successful file upload response.
      properties:
        status:
          type: string
          default: success
        uploaded:
          type: array
          items:
            $ref: '#/components/schemas/UploadedFile'
        message:
          type: string
      required:
      - message
      - uploaded
    JobFileUploadViewResponse:
      type: object
      description: Serializer for JobFileUploadView response.
      properties:
        status:
          type: string
          default: success
        uploaded:
          type: array
          items:
            $ref: '#/components/schemas/JobFile'
        message:
          type: string
      required:
      - message
      - uploaded
    JobForPurchasing:
      type: object
      description: Serializer for Job model in purchasing contexts.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        job_number:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        name:
          type: string
          maxLength: 100
        client_name:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusE5cEnum'
        is_stock_holding:
          type: boolean
          readOnly: true
        job_display_name:
          type: string
          readOnly: true
      required:
      - client_name
      - id
      - is_stock_holding
      - job_display_name
      - job_number
      - name
    JobQuoteChat:
      type: object
      description: |-
        Serializer for creating new JobQuoteChat messages.
        Validates required fields and business rules.
      properties:
        message_id:
          type: string
          description: Frontend-generated unique ID
          maxLength: 100
        role:
          $ref: '#/components/schemas/RoleEnum'
        content:
          type: string
        metadata:
          description: Extra data like streaming status, processing time, etc.
        timestamp:
          type: string
          format: date-time
          readOnly: true
      required:
      - content
      - message_id
      - role
      - timestamp
    JobQuoteChatHistoryResponse:
      type: object
      description: Serializer for chat history response.
      properties:
        success:
          type: boolean
        data:
          type: object
          additionalProperties: {}
      required:
      - data
      - success
    JobQuoteChatInteractionRequest:
      type: object
      description: Serializer for chat interaction request data.
      properties:
        message:
          type: string
          description: User message content to send to the AI assistant
          maxLength: 5000
      required:
      - message
    JobQuoteChatUpdate:
      type: object
      description: |-
        Serializer for updating existing JobQuoteChat messages.
        Used for PATCH operations, especially streaming response updates.
      properties:
        content:
          type: string
        metadata:
          description: Extra data like streaming status, processing time, etc.
    JobReorderRequest:
      type: object
      description: Serializer for job reorder request data.
      properties:
        before_id:
          type: string
          format: uuid
          nullable: true
          description: ID of job to place this job before
        after_id:
          type: string
          format: uuid
          nullable: true
          description: ID of job to place this job after
        status:
          type: string
          nullable: true
          description: New status if moving between columns
    JobRestErrorResponse:
      type: object
      description: Serializer for job REST error responses.
      properties:
        error:
          type: string
      required:
      - error
    JobStatusUpdateRequest:
      type: object
      description: Serializer for job status update request data.
      properties:
        status:
          type: string
          description: New status for the job
      required:
      - status
    JobsListResponse:
      type: object
      description: Serializer for jobs list API response
      properties:
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/ModernTimesheetJob'
        total_count:
          type: integer
      required:
      - jobs
      - total_count
    KPICalendarData:
      type: object
      description: Serializer for KPI Calendar data response.
      properties:
        calendar_data:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/KPIDayData'
        monthly_totals:
          $ref: '#/components/schemas/KPIMonthlyTotals'
        thresholds:
          $ref: '#/components/schemas/KPIThresholds'
        year:
          type: integer
        month:
          type: integer
      required:
      - calendar_data
      - month
      - monthly_totals
      - thresholds
      - year
    KPIDayData:
      type: object
      description: Serializer for individual day data in KPI calendar
      properties:
        date:
          type: string
          format: date
        day:
          type: integer
        holiday:
          type: boolean
        holiday_name:
          type: string
        billable_hours:
          type: number
          format: double
        total_hours:
          type: number
          format: double
        shop_hours:
          type: number
          format: double
        shop_percentage:
          type: number
          format: double
        gross_profit:
          type: number
          format: double
        color:
          type: string
        gp_target_achievement:
          type: number
          format: double
        details:
          $ref: '#/components/schemas/KPIDetails'
      required:
      - billable_hours
      - color
      - date
      - day
      - details
      - gp_target_achievement
      - gross_profit
      - holiday
      - shop_hours
      - shop_percentage
      - total_hours
    KPIDetails:
      type: object
      description: Serializer for detailed KPI data per day
      properties:
        time_revenue:
          type: number
          format: double
        material_revenue:
          type: number
          format: double
        adjustment_revenue:
          type: number
          format: double
        total_revenue:
          type: number
          format: double
        staff_cost:
          type: number
          format: double
        material_cost:
          type: number
          format: double
        adjustment_cost:
          type: number
          format: double
        total_cost:
          type: number
          format: double
        profit_breakdown:
          $ref: '#/components/schemas/KPIProfitBreakdown'
        job_breakdown:
          type: array
          items:
            $ref: '#/components/schemas/KPIJobBreakdown'
      required:
      - adjustment_cost
      - adjustment_revenue
      - job_breakdown
      - material_cost
      - material_revenue
      - profit_breakdown
      - staff_cost
      - time_revenue
      - total_cost
      - total_revenue
    KPIJobBreakdown:
      type: object
      description: Serializer for job breakdown data in KPI calendar
      properties:
        job_id:
          type: string
        job_number:
          type: string
        job_name:
          type: string
        client_name:
          type: string
        billable_hours:
          type: number
          format: double
        revenue:
          type: number
          format: double
        cost:
          type: number
          format: double
        profit:
          type: number
          format: double
      required:
      - billable_hours
      - client_name
      - cost
      - job_id
      - job_name
      - job_number
      - profit
      - revenue
    KPIMonthlyTotals:
      type: object
      description: Serializer for monthly totals in KPI calendar
      properties:
        billable_hours:
          type: number
          format: double
        total_hours:
          type: number
          format: double
        shop_hours:
          type: number
          format: double
        gross_profit:
          type: number
          format: double
        days_green:
          type: integer
        days_amber:
          type: integer
        days_red:
          type: integer
        labour_green_days:
          type: integer
        labour_amber_days:
          type: integer
        labour_red_days:
          type: integer
        profit_green_days:
          type: integer
        profit_amber_days:
          type: integer
        profit_red_days:
          type: integer
        working_days:
          type: integer
        elapsed_workdays:
          type: integer
        remaining_workdays:
          type: integer
        time_revenue:
          type: number
          format: double
        material_revenue:
          type: number
          format: double
        adjustment_revenue:
          type: number
          format: double
        staff_cost:
          type: number
          format: double
        material_cost:
          type: number
          format: double
        adjustment_cost:
          type: number
          format: double
        material_profit:
          type: number
          format: double
        adjustment_profit:
          type: number
          format: double
        total_revenue:
          type: number
          format: double
        total_cost:
          type: number
          format: double
        elapsed_target:
          type: number
          format: double
        net_profit:
          type: number
          format: double
        billable_percentage:
          type: number
          format: double
        shop_percentage:
          type: number
          format: double
        avg_daily_gp:
          type: number
          format: double
        avg_daily_gp_so_far:
          type: number
          format: double
        avg_billable_hours_so_far:
          type: number
          format: double
        color_hours:
          type: string
        color_gp:
          type: string
        color_shop:
          type: string
      required:
      - adjustment_cost
      - adjustment_profit
      - adjustment_revenue
      - avg_billable_hours_so_far
      - avg_daily_gp
      - avg_daily_gp_so_far
      - billable_hours
      - billable_percentage
      - color_gp
      - color_hours
      - color_shop
      - days_amber
      - days_green
      - days_red
      - elapsed_target
      - elapsed_workdays
      - gross_profit
      - labour_amber_days
      - labour_green_days
      - labour_red_days
      - material_cost
      - material_profit
      - material_revenue
      - net_profit
      - profit_amber_days
      - profit_green_days
      - profit_red_days
      - remaining_workdays
      - shop_hours
      - shop_percentage
      - staff_cost
      - time_revenue
      - total_cost
      - total_hours
      - total_revenue
      - working_days
    KPIProfitBreakdown:
      type: object
      description: Serializer for profit breakdown in KPI calendar details
      properties:
        labor_profit:
          type: number
          format: double
        material_profit:
          type: number
          format: double
        adjustment_profit:
          type: number
          format: double
      required:
      - adjustment_profit
      - labor_profit
      - material_profit
    KPIThresholds:
      type: object
      description: Serializer for KPI thresholds
      properties:
        billable_threshold_green:
          type: number
          format: double
        billable_threshold_amber:
          type: number
          format: double
        daily_gp_target:
          type: number
          format: double
        shop_hours_target:
          type: number
          format: double
      required:
      - billable_threshold_amber
      - billable_threshold_green
      - daily_gp_target
      - shop_hours_target
    KanbanColumnJob:
      type: object
      description: Serializer for job data in kanban column context (from get_jobs_by_kanban_column).
      properties:
        id:
          type: string
        job_number:
          type: string
        name:
          type: string
        description:
          type: string
        client_name:
          type: string
        contact_person:
          type: string
        people:
          type: array
          items:
            type: object
            additionalProperties: {}
        status:
          type: string
        status_key:
          type: string
        paid:
          type: boolean
        created_by_id:
          type: string
          nullable: true
        created_at:
          type: string
          nullable: true
        priority:
          type: integer
        badge_label:
          type: string
        badge_color:
          type: string
      required:
      - badge_color
      - badge_label
      - client_name
      - contact_person
      - created_at
      - created_by_id
      - description
      - id
      - job_number
      - name
      - paid
      - people
      - priority
      - status
      - status_key
    KanbanJob:
      type: object
      description: Serializer for job data in kanban context (matches KanbanService.serialize_job_for_api).
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        job_number:
          type: string
        client_name:
          type: string
        contact_person:
          type: string
        people:
          type: array
          items:
            $ref: '#/components/schemas/KanbanJobPerson'
        status:
          type: string
        status_key:
          type: string
        paid:
          type: boolean
        created_by_id:
          type: string
          format: uuid
          nullable: true
        created_at:
          type: string
          nullable: true
        priority:
          type: integer
      required:
      - client_name
      - contact_person
      - created_at
      - created_by_id
      - description
      - id
      - job_number
      - name
      - paid
      - people
      - priority
      - status
      - status_key
    KanbanJobPerson:
      type: object
      description: Serializer for person data in kanban job context.
      properties:
        id:
          type: string
          format: uuid
        display_name:
          type: string
        icon:
          type: string
          format: uri
          nullable: true
      required:
      - display_name
      - icon
      - id
    KanbanStaff:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 30
        icon:
          type: string
          nullable: true
          readOnly: true
        display_name:
          type: string
          readOnly: true
      required:
      - display_name
      - first_name
      - icon
      - id
      - last_name
    Kind332Enum:
      enum:
      - time
      - material
      - adjust
      type: string
      description: |-
        * `time` - Time
        * `material` - Material
        * `adjust` - Adjustment
    LinkQuoteSheetRequest:
      type: object
      description: Serializer for link quote sheet request data.
      properties:
        template_url:
          type: string
          format: uri
    MetalTypeEnum:
      enum:
      - stainless_steel
      - mild_steel
      - aluminum
      - brass
      - copper
      - titanium
      - zinc
      - galvanized
      - unspecified
      - other
      type: string
      description: |-
        * `stainless_steel` - Stainless Steel
        * `mild_steel` - Mild Steel
        * `aluminum` - Aluminum
        * `brass` - Brass
        * `copper` - Copper
        * `titanium` - Titanium
        * `zinc` - Zinc
        * `galvanized` - Galvanized
        * `unspecified` - Unspecified
        * `other` - Other
    ModernStaff:
      type: object
      description: Serializer for staff in timesheet context
      properties:
        id:
          type: string
        name:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        avatarUrl:
          type: string
          nullable: true
      required:
      - avatarUrl
      - email
      - firstName
      - id
      - lastName
      - name
    ModernTimesheetDayGetResponse:
      type: object
      description: Serializer for timesheet day GET response
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/TimesheetCostLine'
        summary:
          $ref: '#/components/schemas/ModernTimesheetSummary'
        date:
          type: string
          format: date
      required:
      - date
      - entries
      - summary
    ModernTimesheetEntryGetResponse:
      type: object
      description: Serializer for timesheet entry GET response
      properties:
        cost_lines:
          type: array
          items:
            $ref: '#/components/schemas/TimesheetCostLine'
        staff:
          $ref: '#/components/schemas/ModernTimesheetStaff'
        date:
          type: string
          format: date
        summary:
          $ref: '#/components/schemas/ModernTimesheetSummary'
      required:
      - cost_lines
      - date
      - staff
      - summary
    ModernTimesheetEntryPostResponse:
      type: object
      description: Serializer for timesheet entry POST response
      properties:
        success:
          type: boolean
        cost_line_id:
          type: string
          format: uuid
        message:
          type: string
      required:
      - success
    ModernTimesheetJob:
      type: object
      description: Serializer for jobs in timesheet context using modern CostSet system
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        job_number:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        name:
          type: string
          maxLength: 100
        client_name:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusE5cEnum'
        charge_out_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        has_actual_costset:
          type: boolean
          description: Check if job has an actual cost set
          readOnly: true
      required:
      - charge_out_rate
      - client_name
      - has_actual_costset
      - id
      - job_number
      - name
    ModernTimesheetJobGetResponse:
      type: object
      description: Serializer for timesheet job GET response
      properties:
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/Job'
        total_count:
          type: integer
      required:
      - jobs
      - total_count
    ModernTimesheetStaff:
      type: object
      description: Serializer for staff information in timesheet responses
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        firstName:
          type: string
        lastName:
          type: string
      required:
      - firstName
      - id
      - lastName
      - name
    ModernTimesheetSummary:
      type: object
      description: Serializer for timesheet entry summary
      properties:
        total_hours:
          type: number
          format: double
        billable_hours:
          type: number
          format: double
        non_billable_hours:
          type: number
          format: double
        total_cost:
          type: number
          format: double
        total_revenue:
          type: number
          format: double
        entry_count:
          type: integer
      required:
      - billable_hours
      - entry_count
      - non_billable_hours
      - total_cost
      - total_hours
      - total_revenue
    MonthEndGetResponse:
      type: object
      description: Serializer for month-end GET response
      properties:
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/MonthEndJob'
        stock_job:
          $ref: '#/components/schemas/MonthEndStockJob'
      required:
      - jobs
      - stock_job
    MonthEndJob:
      type: object
      description: Serializer for special jobs in month-end processing
      properties:
        job_id:
          type: string
          format: uuid
        job_number:
          type: string
        job_name:
          type: string
        client_name:
          type: string
        history:
          type: array
          items:
            $ref: '#/components/schemas/MonthEndJobHistory'
        total_hours:
          type: number
          format: double
        total_dollars:
          type: number
          format: double
      required:
      - client_name
      - history
      - job_id
      - job_name
      - job_number
      - total_dollars
      - total_hours
    MonthEndJobHistory:
      type: object
      description: Serializer for job history in month-end data
      properties:
        date:
          type: string
          format: date
        total_hours:
          type: number
          format: double
        total_dollars:
          type: number
          format: double
      required:
      - date
      - total_dollars
      - total_hours
    MonthEndPostResponse:
      type: object
      description: Serializer for month-end POST response
      properties:
        processed:
          type: array
          items:
            type: string
            format: uuid
          description: List of successfully processed job IDs
        errors:
          type: array
          items:
            type: string
          description: List of error messages for failed processing
      required:
      - errors
      - processed
    MonthEndStockHistory:
      type: object
      description: Serializer for stock job history in month-end data
      properties:
        date:
          type: string
          format: date
        material_line_count:
          type: integer
        material_cost:
          type: number
          format: double
      required:
      - date
      - material_cost
      - material_line_count
    MonthEndStockJob:
      type: object
      description: Serializer for stock job in month-end processing
      properties:
        job_id:
          type: string
          format: uuid
        job_number:
          type: string
        job_name:
          type: string
        history:
          type: array
          items:
            $ref: '#/components/schemas/MonthEndStockHistory'
      required:
      - history
      - job_id
      - job_name
      - job_number
    NullEnum:
      enum:
      - null
    PaginatedCompleteJobList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CompleteJob'
    PaginatedXeroErrorList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/XeroError'
    PatchedAIProviderCreateUpdate:
      type: object
      description: |-
        Serializer for creating and updating AIProvider instances.
        This serializer handles the `api_key` securely by making it write-only.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Friendly name for this provider
          maxLength: 100
        provider_type:
          allOf:
          - $ref: '#/components/schemas/ProviderTypeEnum'
          description: |-
            Type of AI provider

            * `Claude` - Anthropic
            * `Gemini` - Google
            * `Mistral` - Mistral
        model_name:
          type: string
          description: Specific model name (e.g., gemini-2.5-flash-lite-preview-06-17)
          maxLength: 100
        default:
          type: boolean
          description: Use this provider as the default
        api_key:
          type: string
          writeOnly: true
          description: API Key for the provider. Leave blank to keep unchanged on
            update.
        company:
          type: string
          readOnly: true
    PatchedCompanyDefaults:
      type: object
      properties:
        company_name:
          type: string
          maxLength: 255
        ai_providers:
          type: array
          items:
            $ref: '#/components/schemas/AIProvider'
          readOnly: true
        is_primary:
          type: boolean
        time_markup:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        materials_markup:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        charge_out_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
        wage_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
        starting_job_number:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Helper field to set the starting job number based on the latest
            paper job
        starting_po_number:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Helper field to set the starting purchase order number
        po_prefix:
          type: string
          description: Prefix for purchase order numbers (e.g., PO-, JO-)
          maxLength: 10
        master_quote_template_url:
          type: string
          format: uri
          nullable: true
          description: URL to the master Google Sheets quote template
          maxLength: 200
        master_quote_template_id:
          type: string
          nullable: true
          description: Google Sheets ID for the quote template
          maxLength: 100
        gdrive_quotes_folder_url:
          type: string
          format: uri
          nullable: true
          description: URL to the Google Drive folder for storing quotes
          maxLength: 200
        gdrive_quotes_folder_id:
          type: string
          nullable: true
          description: Google Drive folder ID for storing quotes
          maxLength: 100
        xero_tenant_id:
          type: string
          nullable: true
          description: The Xero tenant ID to use for this company
          maxLength: 100
        mon_start:
          type: string
          format: time
        mon_end:
          type: string
          format: time
        tue_start:
          type: string
          format: time
        tue_end:
          type: string
          format: time
        wed_start:
          type: string
          format: time
        wed_end:
          type: string
          format: time
        thu_start:
          type: string
          format: time
        thu_end:
          type: string
          format: time
        fri_start:
          type: string
          format: time
        fri_end:
          type: string
          format: time
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        last_xero_sync:
          type: string
          format: date-time
          nullable: true
          description: The last time Xero data was synchronized
        last_xero_deep_sync:
          type: string
          format: date-time
          nullable: true
          description: The last time a deep Xero sync was performed (looking back
            90 days)
        shop_client_name:
          type: string
          nullable: true
          description: Name of the internal shop client for tracking shop work (e.g.,
            'MSM (Shop)')
          maxLength: 255
        billable_threshold_green:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          title: Green Threshold of Billable Hours
          description: Daily billable hours above this threshold are marked in green
        billable_threshold_amber:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          title: Amber Threshold of Billable Hours
          description: Daily billable hours between this threshold and the green threshold
            are marked in amber
        daily_gp_target:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          title: Daily Goal of Gross Profit
          description: Daily gross profit goal in dolars
        shop_hours_target_percentage:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          title: Hours percentage goal in Shop Jobs
          description: Target percentage of hours worked in shop jobs
    PatchedCostLineCreateUpdate:
      type: object
      description: Serializer for CostLine creation and updates - full write capabilities
      properties:
        kind:
          $ref: '#/components/schemas/Kind332Enum'
        desc:
          type: string
          description: Description of this cost line
          maxLength: 255
        quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,7}(?:\.\d{0,3})?$
        unit_cost:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        unit_rev:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        ext_refs:
          description: External references (e.g., time entry IDs, material IDs)
        meta:
          description: Additional metadata
    PatchedDjangoJob:
      type: object
      properties:
        id:
          type: string
          description: Unique id for this job.
          maxLength: 255
        next_run_time:
          type: string
          format: date-time
          nullable: true
          description: Date and time at which this job is scheduled to be executed
            next.
        job_state:
          type: string
          format: byte
          readOnly: true
    PatchedJobQuoteChatUpdate:
      type: object
      description: |-
        Serializer for updating existing JobQuoteChat messages.
        Used for PATCH operations, especially streaming response updates.
      properties:
        content:
          type: string
        metadata:
          description: Extra data like streaming status, processing time, etc.
    PatchedPurchaseOrderUpdate:
      type: object
      description: Serializer for updating purchase orders.
      properties:
        supplier_id:
          type: string
          format: uuid
          nullable: true
        reference:
          type: string
          maxLength: 255
        expected_delivery:
          type: string
          format: date
          nullable: true
        status:
          type: string
          maxLength: 50
        lines_to_delete:
          type: array
          items:
            type: string
            format: uuid
          description: List of line IDs to delete
        lines:
          type: array
          items:
            $ref: '#/components/schemas/PurchaseOrderLineCreate'
    PatchedStaff:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        password:
          type: string
          maxLength: 128
        last_login:
          type: string
          format: date-time
          nullable: true
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        icon:
          type: string
          format: uri
          nullable: true
        password_needs_reset:
          type: boolean
        email:
          type: string
          format: email
          maxLength: 254
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 30
        preferred_name:
          type: string
          nullable: true
          maxLength: 30
        wage_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        ims_payroll_id:
          type: string
          nullable: true
          maxLength: 100
        raw_ims_data:
          nullable: true
        is_active:
          type: boolean
        is_staff:
          type: boolean
        date_joined:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
          readOnly: true
        hours_mon:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
          description: Standard hours for Monday, 0 for non-working day
        hours_tue:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
          description: Standard hours for Tuesday, 0 for non-working day
        hours_wed:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
          description: Standard hours for Wednesday, 0 for non-working day
        hours_thu:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
          description: Standard hours for Thursday, 0 for non-working day
        hours_fri:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
          description: Standard hours for Friday, 0 for non-working day
        hours_sat:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
          description: Standard hours for Saturday, 0 for non-working day
        hours_sun:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
          description: Standard hours for Sunday, 0 for non-working day
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        user_permissions:
          type: array
          items:
            type: integer
          description: Specific permissions for this user.
    PreviewQuoteResponse:
      type: object
      description: Serializer for preview quote response.
      properties:
        success:
          type: boolean
        draft_lines:
          type: array
          items:
            $ref: '#/components/schemas/DraftLine'
        changes:
          $ref: '#/components/schemas/QuoteChanges'
        message:
          type: string
    PricingMethodologyEnum:
      enum:
      - time_materials
      - fixed_price
      type: string
      description: |-
        * `time_materials` - Time & Materials
        * `fixed_price` - Fixed Price
    ProviderTypeEnum:
      enum:
      - Claude
      - Gemini
      - Mistral
      type: string
      description: |-
        * `Claude` - Anthropic
        * `Gemini` - Google
        * `Mistral` - Mistral
    PurchaseOrderAllocationsResponse:
      type: object
      description: Serializer for purchase order allocations response.
      properties:
        po_id:
          type: string
          format: uuid
        allocations:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/AllocationItem'
          description: Dictionary where keys are PurchaseOrderLine IDs and values
            are lists of allocations
      required:
      - allocations
      - po_id
    PurchaseOrderCreate:
      type: object
      description: Serializer for creating purchase orders.
      properties:
        supplier_id:
          type: string
          format: uuid
          nullable: true
        reference:
          type: string
          maxLength: 255
        order_date:
          type: string
          format: date
          nullable: true
        expected_delivery:
          type: string
          format: date
          nullable: true
        lines:
          type: array
          items:
            $ref: '#/components/schemas/PurchaseOrderLineCreate'
    PurchaseOrderDetail:
      type: object
      description: Return purchase order details with related lines.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        po_number:
          type: string
          maxLength: 50
        reference:
          type: string
          nullable: true
          description: Optional reference for the purchase order
          maxLength: 100
        supplier:
          type: string
          readOnly: true
        supplier_id:
          type: string
          nullable: true
          readOnly: true
        supplier_has_xero_id:
          type: boolean
          readOnly: true
        status:
          $ref: '#/components/schemas/PurchaseOrderDetailStatusEnum'
        order_date:
          type: string
          format: date
        expected_delivery:
          type: string
          format: date
          nullable: true
        lines:
          type: array
          items:
            $ref: '#/components/schemas/PurchaseOrderLine'
        online_url:
          type: string
          format: uri
          nullable: true
          maxLength: 500
        xero_id:
          type: string
          format: uuid
          nullable: true
      required:
      - id
      - lines
      - po_number
      - supplier
      - supplier_has_xero_id
      - supplier_id
    PurchaseOrderDetailStatusEnum:
      enum:
      - draft
      - submitted
      - partially_received
      - fully_received
      - deleted
      type: string
      description: |-
        * `draft` - Draft
        * `submitted` - Submitted to Supplier
        * `partially_received` - Partially Received
        * `fully_received` - Fully Received
        * `deleted` - Deleted
    PurchaseOrderEmailRequest:
      type: object
      description: Serializer for purchase order email generation request
      properties:
        recipient_email:
          type: string
          format: email
        message:
          type: string
          maxLength: 1000
    PurchaseOrderLine:
      type: object
      description: Serializer for PurchaseOrderLine model.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        item_code:
          type: string
          nullable: true
          description: Internal item code for Xero integration
          maxLength: 50
        description:
          type: string
          maxLength: 200
        quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        received_quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Total quantity received against this line
        unit_cost:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        price_tbc:
          type: boolean
          description: If true, the price is to be confirmed and unit cost will be
            None
        metal_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/MetalTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        alloy:
          type: string
          nullable: true
          description: Alloy specification (e.g., 304, 6061)
          maxLength: 50
        specifics:
          type: string
          nullable: true
          description: Specific details (e.g., m8 countersunk socket screw)
          maxLength: 255
        location:
          type: string
          nullable: true
          description: Where this item will be stored
          maxLength: 255
        dimensions:
          type: string
          nullable: true
          description: Dimensions such as length, width, height, etc.
          maxLength: 255
        job_id:
          type: string
          format: uuid
          nullable: true
      required:
      - description
      - id
      - quantity
    PurchaseOrderLineCreate:
      type: object
      description: Serializer for creating purchase order lines.
      properties:
        job_id:
          type: string
          format: uuid
          nullable: true
        description:
          type: string
          maxLength: 255
        quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          default: '0.00'
        unit_cost:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        price_tbc:
          type: boolean
          default: false
        item_code:
          type: string
          maxLength: 100
        metal_type:
          type: string
          maxLength: 100
        alloy:
          type: string
          maxLength: 100
        specifics:
          type: string
          maxLength: 255
        location:
          type: string
          maxLength: 255
    PurchaseOrderList:
      type: object
      description: Serializer for listing purchase orders from service data.
      properties:
        id:
          type: string
          format: uuid
        po_number:
          type: string
        status:
          type: string
        order_date:
          type: string
          format: date
        supplier:
          type: string
        supplier_id:
          type: string
          format: uuid
          nullable: true
      required:
      - id
      - order_date
      - po_number
      - status
      - supplier
      - supplier_id
    PurchaseOrderPDFResponse:
      type: object
      description: Serializer for purchase order PDF generation response
      properties:
        success:
          type: boolean
        message:
          type: string
    PurchaseOrderUpdate:
      type: object
      description: Serializer for updating purchase orders.
      properties:
        supplier_id:
          type: string
          format: uuid
          nullable: true
        reference:
          type: string
          maxLength: 255
        expected_delivery:
          type: string
          format: date
          nullable: true
        status:
          type: string
          maxLength: 50
        lines_to_delete:
          type: array
          items:
            type: string
            format: uuid
          description: List of line IDs to delete
        lines:
          type: array
          items:
            $ref: '#/components/schemas/PurchaseOrderLineCreate'
    PurchasingJobsResponse:
      type: object
      description: Serializer for PurchasingJobsAPIView response
      properties:
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/JobForPurchasing'
        total_count:
          type: integer
      required:
      - jobs
      - total_count
    QuoteChanges:
      type: object
      description: Serializer for quote changes data.
      properties:
        additions:
          type: array
          items:
            $ref: '#/components/schemas/DraftLine'
        updates:
          type: array
          items:
            $ref: '#/components/schemas/DraftLine'
        deletions:
          type: array
          items:
            $ref: '#/components/schemas/DraftLine'
      required:
      - additions
      - deletions
      - updates
    QuoteImportStatusResponse:
      type: object
      description: Serializer for quote import status response
      properties:
        job_id:
          type: string
        job_name:
          type: string
        has_quote:
          type: boolean
        quote:
          $ref: '#/components/schemas/CostSet'
        revision:
          type: integer
        created:
          type: string
          format: date-time
        summary: {}
      required:
      - has_quote
      - job_id
      - job_name
    QuoteSpreadsheet:
      type: object
      description: |-
        Serializer for QuoteSpreadsheet model.

        Provides clean JSON representation for REST endpoints with
        job information for context.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        sheet_id:
          type: string
          description: Google Drive file ID
          maxLength: 100
        sheet_url:
          type: string
          format: uri
          nullable: true
          maxLength: 500
        tab:
          type: string
          nullable: true
          maxLength: 100
        job_id:
          type: string
          readOnly: true
        job_number:
          type: string
          readOnly: true
        job_name:
          type: string
          readOnly: true
      required:
      - id
      - job_id
      - job_name
      - job_number
      - sheet_id
    RoleEnum:
      enum:
      - user
      - assistant
      type: string
      description: |-
        * `user` - User
        * `assistant` - Assistant
    Staff:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        password:
          type: string
          maxLength: 128
        last_login:
          type: string
          format: date-time
          nullable: true
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        icon:
          type: string
          format: uri
          nullable: true
        password_needs_reset:
          type: boolean
        email:
          type: string
          format: email
          maxLength: 254
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 30
        preferred_name:
          type: string
          nullable: true
          maxLength: 30
        wage_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        ims_payroll_id:
          type: string
          nullable: true
          maxLength: 100
        raw_ims_data:
          nullable: true
        is_active:
          type: boolean
        is_staff:
          type: boolean
        date_joined:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
          readOnly: true
        hours_mon:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
          description: Standard hours for Monday, 0 for non-working day
        hours_tue:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
          description: Standard hours for Tuesday, 0 for non-working day
        hours_wed:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
          description: Standard hours for Wednesday, 0 for non-working day
        hours_thu:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
          description: Standard hours for Thursday, 0 for non-working day
        hours_fri:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
          description: Standard hours for Friday, 0 for non-working day
        hours_sat:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
          description: Standard hours for Saturday, 0 for non-working day
        hours_sun:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
          description: Standard hours for Sunday, 0 for non-working day
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        user_permissions:
          type: array
          items:
            type: integer
          description: Specific permissions for this user.
      required:
      - email
      - first_name
      - id
      - last_name
      - updated_at
    StaffDailyData:
      type: object
      description: Serializer for individual staff daily timesheet data
      properties:
        staff_id:
          type: string
        staff_name:
          type: string
        staff_initials:
          type: string
        avatar_url:
          type: string
          nullable: true
        scheduled_hours:
          type: number
          format: double
        actual_hours:
          type: number
          format: double
        billable_hours:
          type: number
          format: double
        non_billable_hours:
          type: number
          format: double
        total_revenue:
          type: number
          format: double
        total_cost:
          type: number
          format: double
        status:
          type: string
        status_class:
          type: string
        billable_percentage:
          type: number
          format: double
        completion_percentage:
          type: number
          format: double
        job_breakdown:
          type: array
          items:
            $ref: '#/components/schemas/JobBreakdown'
        entry_count:
          type: integer
        alerts:
          type: array
          items:
            type: string
      required:
      - actual_hours
      - alerts
      - avatar_url
      - billable_hours
      - billable_percentage
      - completion_percentage
      - entry_count
      - job_breakdown
      - non_billable_hours
      - scheduled_hours
      - staff_id
      - staff_initials
      - staff_name
      - status
      - status_class
      - total_cost
      - total_revenue
    StaffListResponse:
      type: object
      description: Serializer for staff list API response
      properties:
        staff:
          type: array
          items:
            $ref: '#/components/schemas/ModernStaff'
        total_count:
          type: integer
      required:
      - staff
      - total_count
    StatusE5cEnum:
      enum:
      - quoting
      - accepted_quote
      - awaiting_materials
      - awaiting_staff
      - awaiting_site_availability
      - in_progress
      - on_hold
      - special
      - recently_completed
      - completed
      - rejected
      - archived
      type: string
      description: |-
        * `quoting` - Quoting
        * `accepted_quote` - Accepted Quote
        * `awaiting_materials` - Awaiting Materials
        * `awaiting_staff` - Awaiting Staff
        * `awaiting_site_availability` - Awaiting Site Availability
        * `in_progress` - In Progress
        * `on_hold` - On Hold
        * `special` - Special
        * `recently_completed` - Recently Completed
        * `completed` - Completed
        * `rejected` - Rejected
        * `archived` - Archived
    StockConsumeRequest:
      type: object
      description: Serializer for stock consumption request
      properties:
        job_id:
          type: string
          format: uuid
        quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
      required:
      - job_id
      - quantity
    StockCreate:
      type: object
      description: Serializer for creating stock items.
      properties:
        description:
          type: string
          maxLength: 255
        quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        unit_cost:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        source:
          type: string
          maxLength: 100
        notes:
          type: string
          maxLength: 500
        metal_type:
          type: string
          maxLength: 100
        alloy:
          type: string
          maxLength: 100
        specifics:
          type: string
          maxLength: 255
        location:
          type: string
          maxLength: 255
      required:
      - description
      - quantity
      - source
      - unit_cost
    StockList:
      type: object
      description: Serializer for listing stock items from service data.
      properties:
        id:
          type: string
          format: uuid
        description:
          type: string
        quantity:
          type: number
          format: double
        unit_cost:
          type: number
          format: double
        metal_type:
          type: string
        alloy:
          type: string
        specifics:
          type: string
        location:
          type: string
        source:
          type: string
        date:
          type: string
          format: date-time
          nullable: true
        job_id:
          type: string
          format: uuid
          nullable: true
        notes:
          type: string
      required:
      - alloy
      - date
      - description
      - id
      - job_id
      - location
      - metal_type
      - notes
      - quantity
      - source
      - specifics
      - unit_cost
    SummaryStats:
      type: object
      description: Serializer for summary statistics
      properties:
        total_staff:
          type: integer
        complete_staff:
          type: integer
        partial_staff:
          type: integer
        missing_staff:
          type: integer
        completion_rate:
          type: number
          format: double
      required:
      - complete_staff
      - completion_rate
      - missing_staff
      - partial_staff
      - total_staff
    TimesheetCostLine:
      type: object
      description: |-
        Serializer for CostLine model specifically for timesheet entries

        Architecture principle: Job data comes from CostSet->Job relationship,
        NOT from metadata. This ensures data consistency and follows SRP:
        - Metadata = timesheet-specific data (staff, date, billable, etc.)
        - Relationship = job data (job_id, job_number, job_name, client)

        Benefits:
        - No data duplication
        - Always consistent with source Job
        - Simplified queries and maintenance
      properties:
        id:
          type: integer
          readOnly: true
        kind:
          allOf:
          - $ref: '#/components/schemas/Kind332Enum'
          readOnly: true
        desc:
          type: string
          readOnly: true
          description: Description of this cost line
        quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,7}(?:\.\d{0,3})?$
          readOnly: true
        unit_cost:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        unit_rev:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        total_cost:
          type: number
          format: double
          description: Get total cost (quantity * unit_cost)
          readOnly: true
        total_rev:
          type: number
          format: double
          description: Get total revenue (quantity * unit_rev)
          readOnly: true
        ext_refs:
          readOnly: true
          description: External references (e.g., time entry IDs, material IDs)
        meta:
          readOnly: true
          description: Additional metadata
        job_id:
          type: string
          readOnly: true
        job_number:
          type: string
          readOnly: true
        job_name:
          type: string
          readOnly: true
        client_name:
          type: string
          description: Get client name with safe null handling
          readOnly: true
        charge_out_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        wage_rate:
          type: number
          format: double
          description: Get staff wage rate from metadata staff_id
          readOnly: true
      required:
      - charge_out_rate
      - client_name
      - desc
      - ext_refs
      - id
      - job_id
      - job_name
      - job_number
      - kind
      - meta
      - quantity
      - total_cost
      - total_rev
      - unit_cost
      - unit_rev
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
    TypeEnum:
      enum:
      - job
      - stock
      type: string
      description: |-
        * `job` - Job
        * `stock` - Stock
    UploadedFile:
      type: object
      description: Serializer for file upload response.
      properties:
        id:
          type: string
        filename:
          type: string
        file_path:
          type: string
        print_on_jobsheet:
          type: boolean
      required:
      - file_path
      - filename
      - id
      - print_on_jobsheet
    UserProfile:
      type: object
      description: Serializer for user profile information returned by /accounts/me/
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
        first_name:
          type: string
          readOnly: true
        last_name:
          type: string
          readOnly: true
        preferred_name:
          type: string
          readOnly: true
        fullName:
          type: string
          readOnly: true
        is_active:
          type: boolean
          readOnly: true
        is_staff:
          type: boolean
          readOnly: true
      required:
      - email
      - first_name
      - fullName
      - id
      - is_active
      - is_staff
      - last_name
      - preferred_name
      - username
    WeeklyTimesheetData:
      type: object
      description: Serializer for comprehensive weekly timesheet data
      properties:
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        week_days:
          type: array
          items:
            type: string
            format: date
        staff_data:
          type: array
          items: {}
        weekly_summary:
          type: object
          additionalProperties: {}
        job_metrics:
          type: object
          additionalProperties: {}
        summary_stats:
          type: object
          additionalProperties: {}
        export_mode:
          type: string
        is_current_week:
          type: boolean
        navigation:
          type: object
          additionalProperties: {}
      required:
      - end_date
      - export_mode
      - is_current_week
      - job_metrics
      - staff_data
      - start_date
      - summary_stats
      - week_days
      - weekly_summary
    WorkshopPDFResponse:
      type: object
      description: Serializer for workshop PDF generation response
      properties:
        status:
          type: string
          description: Response status
        message:
          type: string
          description: Error message if applicable
    XeroError:
      type: object
      description: |-
        Basic serializer to expose all fields of XeroError.

        This is required by apps that import `XeroErrorSerializer`
        (e.g., `apps.workflow.views.xero.xero_view`).
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        timestamp:
          type: string
          format: date-time
          readOnly: true
        message:
          type: string
        data:
          nullable: true
        entity:
          type: string
          maxLength: 100
        reference_id:
          type: string
          maxLength: 255
        kind:
          type: string
          maxLength: 50
      required:
      - entity
      - id
      - kind
      - message
      - reference_id
      - timestamp
    XeroItem:
      type: object
      description: Serializer for Xero item data
      properties:
        code:
          type: string
        name:
          type: string
        description:
          type: string
        sales_details:
          type: object
          additionalProperties: {}
        purchase_details:
          type: object
          additionalProperties: {}
      required:
      - code
      - name
    XeroItemListResponse:
      type: object
      description: Serializer for XeroItemList response
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/XeroItem'
        total_count:
          type: integer
      required:
      - items
    JobEventCreateRequest:
      type: object
      description: Serializer for job event creation request
      properties:
        description:
          type: string
          maxLength: 500
      required:
      - description
    JobEventCreateResponse:
      type: object
      description: Serializer for job event creation response
      properties:
        success:
          type: boolean
        event:
          type: object
      required:
      - success
      - event
    QuoteRevisionRequest:
      type: object
      description: Serializer for quote revision request - validates input data
      properties:
        reason:
          type: string
          maxLength: 500
          description: Optional reason for creating a new quote revision
    QuoteRevisionResponse:
      type: object
      description: Serializer for quote revision response
      properties:
        success:
          type: boolean
        message:
          type: string
        previous_revision:
          type: integer
        new_revision:
          type: integer
        archived_cost_lines_count:
          type: integer
        job_id:
          type: string
        error:
          type: string
          description: Optional error details
      required:
      - success
      - message
      - previous_revision
      - new_revision
      - archived_cost_lines_count
      - job_id
    ClientCreateRequest:
      type: object
      description: Serializer for client creation request
      properties:
        name:
          type: string
          maxLength: 255
        email:
          type: string
          format: email
        phone:
          type: string
          maxLength: 50
        address:
          type: string
        is_account_customer:
          type: boolean
          default: true
      required:
      - name
    ClientSearchResult:
      type: object
      description: Serializer for client search results
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        address:
          type: string
        is_account_customer:
          type: boolean
        xero_contact_id:
          type: string
        last_invoice_date:
          type: string
        total_spend:
          type: string
      required:
      - id
      - name
      - email
      - phone
      - address
      - is_account_customer
      - xero_contact_id
      - last_invoice_date
      - total_spend
    ClientCreateResponse:
      type: object
      description: Serializer for client creation response
      properties:
        success:
          type: boolean
        client:
          $ref: '#/components/schemas/ClientSearchResult'
        message:
          type: string
      required:
      - success
      - client
      - message
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: access_token
