###############################################################################
# jobs-manager – pyproject.toml                                                #
# Strategy:                                                                    #
#   • Stable libs (≥1.0)  → ^x.y  (minor/patch updates auto-apply)             #
#   • Pre-1.0 libs       → >=a.b,<1.0  (minor + patch until they hit 1.0)      #
###############################################################################

[tool.poetry]
name        = "jobs-manager"
version     = "0.1.0"
description = "Django app for managing quotes and jobs"
authors     = ["Corrin Lakeland <corrin.lakeland@cmeconnect.com>"]
readme      = "README.md"

[tool.poetry.dependencies]
python                        = "^3.12"
Django                        = "^5.2"
django-encrypted-model-fields = ">=0.6,<1.0"
django-simple-history         = "^3.7.0"
pytz                          = "^2024.1"
python-dotenv                 = "^1.0.1"
xero-python                   = "^6.2.0"
requests                      = "^2.32.3"
django-filter                 = "^24.3"
django-tables2                = "^2.7.0"
django-sortable               = ">=0.3,<1.0"
django-crispy-forms           = "^2.3"
crispy-bootstrap5             = "^2024.2"
djangorestframework           = "^3.15.2"
mysqlclient                   = "^2.2.4"
concurrent-log-handler        = ">=0.9,<1.0"
dropbox                       = "^12.0.2"
django-node-assets            = ">=0.9,<1.0"
pillow                        = "^11.1.0"
reportlab                     = "^4.2.5"
PyPDF2                        = "^3.0.0"
APScheduler                   = "^3.10.4"
pdf2image                     = "^1.17.0"
gunicorn                      = "^23.0.0"
pdfplumber                    = ">=0.11,<1.0"
holidays                      = ">=0.71,<1.0"
djangorestframework-simplejwt = "^5.5.0"
google-api-python-client      = "^2.170.0"
thefuzz                       = ">=0.22,<1.0"
python-levenshtein            = ">=0.26,<1.0"

# Runtime Gemini calls – allow all 1.x but block 2.x until reviewed
google-genai                  = ">=1.12,<2.0"

# ── optional local-only tools ────────────────────────────────────────────────
django-debug-toolbar = { version = "^4.4.6", optional = true }
matplotlib           = { version = "^3.10.0", optional = true }
pyngrok              = { version = "^7.2.3", optional = true }

[tool.poetry.extras]
devtools = ["django-debug-toolbar", "matplotlib", "pyngrok"]

# ── development group ────────────────────────────────────────────────────────
[tool.poetry.group.dev.dependencies]
black           = "^24.4.2"
flake8          = "^7.0.0"
mypy            = "^1.11.2"
pylint          = "^3.2.7"
tox             = "^4.18.1"
django-stubs    = "^5.0.4"
mypy-extensions = "^1.0.0"
types-pytz      = "^2024.1.0.20240417"
isort           = "^5.13.2"
vulture         = "^2.12"
deptry          = "^0.20.0"
pandas          = "^2.2.3"
pandas-stubs    = "^2.2"
pylint-django   = "^2.6.1"

# ── build system ─────────────────────────────────────────────────────────────
[build-system]
requires      = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# ── Black ────────────────────────────────────────────────────────────────────
[tool.black]
line-length    = 88
target-version = ["py312"]
exclude        = '\.git|\.hg|\.mypy_cache|\.tox|\.venv|_build|buck-out|build|dist|migrations'

# ── isort ────────────────────────────────────────────────────────────────────
[tool.isort]
profile                        = "black"
line_length                    = 88
known_first_party              = "jobs_manager"
multi_line_output              = 3
include_trailing_comma         = true
force_grid_wrap                = 0
use_parentheses                = true
ensure_newline_before_comments = true

# ── mypy ─────────────────────────────────────────────────────────────────────
[tool.mypy]
python_version               = "3.12"
plugins                      = ["mypy_django_plugin.main"]
strict                       = true
mypy_path                    = "./"
exclude                      = "migrations|__pycache__|.tox|venv"
warn_return_any              = true
warn_unused_configs          = true
disallow_untyped_defs        = true
disallow_untyped_calls       = true
disallow_incomplete_defs     = true
check_untyped_defs           = true
disallow_untyped_decorators  = true
no_implicit_optional         = true
warn_redundant_casts         = true
warn_unused_ignores          = true
warn_no_return               = true
warn_unreachable             = true
show_error_codes             = true
pretty                       = true
show_column_numbers          = true
show_error_context           = true

# ── pylint ───────────────────────────────────────────────────────────────────
[tool.pylint]
max-line-length        = 88
ignore                 = ["migrations", "__pycache__", "site-packages", ".tox"]
load-plugins           = "pylint_django"
django-settings-module = "jobs_manager.settings"

[tool.pylint.messages-control]
disable = ["missing-docstring", "invalid-name"]

[tool.pylint.django]
django-url-pattern-names = true
django-settings-module   = "jobs_manager.settings"

# ── django-stubs plug-in ─────────────────────────────────────────────────────
[tool.django-stubs]
django_settings_module = "jobs_manager.settings"

# ── post-install hook ────────────────────────────────────────────────────────
[tool.poetry.scripts]
post-install = "scripts.post_install:install_system_deps"
