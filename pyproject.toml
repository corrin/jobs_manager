[tool.poetry]
name = "jobs-manager"
version = "0.1.0"
description = "Django app for managing quotes and jobs"
authors = ["Corrin Lakeland <corrin.lakeland@cmeconnect.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
Django = "^5.2"
django-encrypted-model-fields = "^0.6.5"
#django-xero = "^0.0.3"
django-simple-history = "^3.10.1"
pytz = "^2025.2"
python-dotenv = "^1.1.1"
xero-python = "^9.0.0"
requests = "^2.32.4"
django-filter = "^24.3"
django-tables2 = "^2.7.5"
django-sortable = "^0.3.1"
django-crispy-forms = "^2.4"
crispy-bootstrap5 = "^2025.6"
djangorestframework = "^3.16.0"
mysqlclient = "^2.2.4"
concurrent-log-handler = "^0.9.28"
django-debug-toolbar = "^4.4.6"
dropbox = "^12.0.2"
django-node-assets = "^0.9.15"
pillow = "^11.1.0"
reportlab = "^4.2.5"
PyPDF2 = "^3.0.0"  # Modern PDF handling
matplotlib = "^3.10.0"
pyngrok = "^7.2.3"
thefuzz = "^0.22.1"
python-levenshtein = "^0.26.1"
APScheduler = "^3.11.0"
pdf2image = "^1.17.0"
gunicorn = "^23.0.0"
pdfplumber = "^0.11.6"
google-genai = "^1.19.0"
holidays = "^0.75"
djangorestframework-simplejwt = "^5.5.0"
beautifulsoup4 = "^4.13.4"
selenium = "^4.34.2"
lxml = "^5.4.0"
django-apscheduler = "^0.7.0"
google-api-python-client = "^2.171.0"
google-generativeai = "^0.8.5"
django-cors-headers = "^4.7.0"
openpyxl = "^3.1.5"
faker = "^37.4.0"
mistralai = "^1.8.2"
django-mcp-server = "^0.5.4"
channels = "^4.2.2"
channels-redis = "^4.2.1"
mcp = "^1.9.4"
anthropic = "^0.54.0"
pandas = "^2.3.0"
numpy = "^2.3.0"
httpx = "^0.28.1"
pre-commit = "^4.2.0"
django-stubs = "^5.2.1"
drf-spectacular = "^0.28.0"
httpcore = "^1.0.9"
boto3 = "^1.39.4"

[tool.poetry.scripts]
post-install = "scripts.post_install:install_system_deps"  # Script to install system dependencies like poppler-utils

[tool.poetry.group.dev.dependencies]
flake8 = "^7.3.0"
mypy = "^1.16.1"
pylint = "^3.2.7"
tox = "^4.18.1"
django-stubs = "^5.2.1"
djangorestframework-stubs = "^3.16"
mypy-extensions = "^1.1.0"
types-pytz = "^2025.2.0.20250516"
isort = "^6.0.1"
vulture = "^2.12"
deptry = "^0.20.0"
django-debug-toolbar = "^4.4.6"
pylint-django = "^2.6.1"
pytest = "^8.4.0"
flake8-pyproject = "^1.2.3"
autoflake = "^2.3.1"
autopep8 = "^2.3.2"
ruff = "^0.12.0"
types-requests = "^2.32.4.20250611"
types-python-dateutil = "^2.9.0.20250516"
black = "^25.1.0"
click = "^8.2.0"
toml = "^0.10.2"
tabulate = "^0.9.0"
google-api-python-client-stubs = "^1.29.0"
google-auth-stubs = "^0.3.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ["py312"]
exclude = '\.git|\.hg|\.mypy_cache|\.tox|\.venv|_build|buck-out|build|dist|migrations|mediafiles'

[tool.isort]
profile = "black"  # This ensures compatibility if you're also using the Black formatter
line_length = 88
known_first_party = ["apps", "jobs_manager"]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = ["**/__init__.py" ,"migrations/*", "mediafiles/*", ".git/*"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
mypy_path = "./"
exclude = "(?x)(migrations/|__pycache__/|\\.tox/|venv/|\\.venv/|mediafiles/|\\.git/)"
plugins = ["mypy_django_plugin.main"]
strict = true
show_error_codes = true
pretty = true
show_column_numbers = true
show_error_context = true
disallow_untyped_calls = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

# pylint configuration
[tool.pylint]
max-line-length = 88
ignore = ["migrations", "__pycache__", "site-packages", ".tox"]
load-plugins = "pylint_django"
django-settings-module = "jobs_manager.settings"

# Django-specific settings
[tool.pylint.MASTER]
load-plugins = "pylint_django"
django-settings-module = "jobs_manager.settings"

[tool.pylint.messages-control]
disable = [
    "missing-docstring",
    "invalid-name",
]

# Enable Django-specific checkers
enable = [
    "django-not-configured",
    "django-not-available",
]

[tool.ruff]
line-length = 88
target-version = "py312"
exclude = ["migrations", "mediafiles", "__pycache__", ".tox", ".venv", ".git"]

[tool.ruff.lint]
select = ["E", "F", "W"]  # Enable flake8-compatible rules
ignore = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.flake8]
max-line-length = 88
exclude = ["migrations", "__pycache__", ".tox", "venv", ".venv", "mediafiles", "adhoc", ".git"]

# The reason for the following is: black is running properly and ensuring lines are not too long.
# But, even with that, it skips string literals and comments, which can lead to long lines.
# Flake8's E501 rule conflicts with Black in this sense, so we ignore it.
# This is to ensure compatibility with Black and Flake8
extend-ignore = [
    "E501",  # Line too long
    "E203",  # Whitespace before ':'
    "W503",  # Line break before binary operator
]

[tool.django-stubs]
django_settings_module = "jobs_manager.settings"
